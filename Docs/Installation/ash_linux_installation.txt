ARCH LINUX INSTALLATION ON ASH'S FIT-PC 3

A. Boot Arch
////////////////////////////////////////////////////////////////////////////

1. Get arch linux core image installation media
   - download arch linux iso (http://www.archlinux.org/download/)
   - this installation used the october 2012 release
   - create live usb (https://wiki.archlinux.org/index.php/USB_Installation_Media)

2. Boot fit-pc from the live usb
   - make sure the bios is set to boot from usb
   - choose to boot arch linux i686 from the arch start menu

B. Install Arch
/////////////////////////////////////////////////////////////////////////////

* see https://wiki.archlinux.org/index.php/Beginners'_Guide

0. Establish internet connection
   - connect wired ethernet
   # ping google.com

1. Prepare the storage drive
   - partition the hard drive :
   # cfdisk /dev/sda
   - recommended configuration :
     [<-- name : sda1; flags:     ; part type: primary; filesystem: Linux; size: 15000MB -->]
   - format root partition:
   # mkfs.ext4 /dev/sda1

2. Mount partition
   - mount root partition on /mnt
   # mount /dev/sda1 /mnt 

3. Select a mirror for the package manager
   - edit the mirrorlist and place preferred mirror first
   # nano /etc/pacman.d/mirrorlist

4. Install the base system
   # pacstrap -i /mnt base base-devel
   - hit <enter> to install all packages

5. Install bootloader
   # arch-chroot /mnt pacman -S grub-bios

6. Configure the system
   A. generate an fstab file 
   # genfstab -p /mnt >> /mnt/etc/fstab

   B. chroot into newly installed system
   # arch-chroot /mnt

   C. setup timezone 
   # ln -s /usr/share/zoneinfo/US/Eastern /etc/localtime

   D. setup hardware clock 
   # hwclock --systohc --utc

   E. write hostname to /etc/hostname
   # echo ash > /etc/hostname

   F. configure wired network 
   # pacman -S ifplugd
   # cd /etc/network.d
   # ln -s examples/ethernet-dhcp .
   # ln -s examples/ethernet-static .
   # nano ethernet-static
     - enter these settings :
       ADDR='192.168.1.123'
   # nano /etc/conf.d/netcfg
     - set the NETWORKS variable to:
     NETWORKS=(ethernet-static)
   # systemctl enable netcfg
   
   G. configure wireless network
   # pacman -S wireless_tools wpa_supplicant wpa_actiond dialog 
   # cd /etc/network.d
   # cp examples/wireless-open romela
   # nano romela
     - enter these settings :
       CONNECTION='wireless'
       INTERFACE='wlan0'
       SECURITY='none'
       ESSID='romela'
       IP='dhcp'
       HIDDEN=yes

   H. set root password
   # passwd

   I. add regular user
   # useradd -m -g users -G wheel ash
   # passwd ash

   J. install and configure grub
   # pacman -S grub-bios
   # grub-install --target=i386-pc --recheck /dev/sda
   # cp /usr/share/locale/en\@quot/LC_MESSAGES/grub.mo /boot/grub/locale/en.mo
   # grub-mkconfig -o /boot/grub/grub.cfg

   H. install sudo
   # pacman -S sudo
   # visudo
     - uncomment the following line and save:
     %wheel ALL=(ALL) ALL
    
7. Unmount and reboot 
   # exit
   # umount /mnt
   # poweroff
   - remove live usb, reboot and login as ash

C : Upgrade system
/////////////////////////////////////////////////////////////////////////////

0. Establish internet connection (with wired ethernet)
   $ sudo netcfg ethernet-dhcp
   $ ping google.com

1. Install amd-ucode package (for fit-pc 3 only)
   $ sudo pacman -S extra/amd-ucode
   $ sudo nano /etc/modules-load.d/microcode.conf 
     -- add the following line and save :
     microcode

2. Initialize package verification :
   $ sudo pacman-key --init
     - (you'll need to type randomly on your keyboard to get this to finish)
   $ sudo pacman-key --populate archlinux

3. try to upgrade all packages :
   $ sudo pacman -Syu
     - enter no if asked to upgrade pacman first

4. if the upgrade fails :
   - search the forums for the specific errors in order to find a solution :
     https://wiki.archlinux.org/index.php/Pacman#Troubleshooting
   - the solution will vary between installations

D : Install utilities 
/////////////////////////////////////////////////////////////////////////////

0. Establish internet connection (with wired ethernet)
   $ sudo netcfg ethernet-dhcp
   $ ping google.com

1. Get yaourt package manager for access to more packages :
   - see http://archlinux.fr/yaourt-en#get_it
   - add following repository to /etc/pacman.conf:
     [archlinuxfr] 
     Server = http://repo.archlinux.fr/i686
   $ sudo pacman -Sy yaourt

2. Install ssh
   $ sudo yaourt -S openssh
   $ sudo yaourt -S xorg-xauth
   $ sudo nano /etc/ssh/sshd_config
     - set the following options : 
     AllowTcpForwarding yes
     X11Forwarding yes 
     X11DisplayOffset 10
     X11UseLocalHost yes
     - see https://wiki.archlinux.org/index.php/Secure_Shell for more options
   $ sudo nano /etc/modules-load.d/sshd.conf 
     - add the following line and save :
     sshd
  
3. Install useful programs 
   $ sudo yaourt -S screen acpid vim git

E : Add CAN bus support 
/////////////////////////////////////////////////////////////////////////////

0. Establish internet connection (with wired ethernet)
   $ sudo netcfg ethernet-dhcp
   $ ping google.com

1. Add CAN modules to the linux kernel :
   $ cd
   $ mkdir kernel
   $ cd kernel
   $ pacman -S abs xmlto docbook-xsl
   $ ABSROOT=. abs core/linux
   $ cd core/linux 
   $ nano PKGBUILD 
     - set pkgbase variable to :
     pkgbase=linux-custom
     - find load configuration section and uncomment the following line :
     make menuconfig
   $ makepkg
     - eventually the menuconfig kernel configuration interface will appear
     - exit first menu, on second menu :
       - enter the Networking support menu
       - disable Amateur Radio support
       - enable <M> CAN bus subsystem support
       - enter CAN bus subsystem support menu
         - enable <M> Raw CAN Protocol
         - enable <M> Broadcast Manager CAN Protocol 
         - enable <M> CAN Gateway/Router
       - enter CAN Device Drivers menue
         - <M> Virtual Local CAN Interface (vcan)
         - <M> Serial / USB serial CAN Adaptors (slcan)
         - <M> Platform CAN drivers with Netlink support
         - [*]   CAN bit-timing calculation
         - <M> Intel EG20T PCH CAN controller
         - <M> Philips/NXP SJA1000 devices
       - enter CAN USB interfaces menu
         - enable <M> PEAK PCAN-USB/USB Pro interfaces
       - exit menuconfig and choose to save config settings
     - building the kernel will take a LONG TIME (~ 4 hours)
   $ sudo pacman -U linux-custom-3.6.3-1-i686.pkg.tar.xz
   $ sudo pacman -U linux-custom-headers-3.6.3-1-i686.pkg.tar.xz
     - replace "3.6.3-1-i686" with whatever kernel version was compiled
   $ sudo grub-mkconfig -o /boot/grub/grub.cfg
   - see https://wiki.archlinux.org/index.php/Kernels/Compilation/Arch_Build_System

2. Install pcan linux driver :
   $ cd
   $ mkdir dependencies && cd dependencies
   $ curl -O http://www.peak-system.com/fileadmin/media/linux/files/peak-linux-driver-7.7.tar.gz
   $ tar xzf peak-linux-driver-7.7.tar.gz
   $ cd peak-linux-driver-7.7
   $ make
   $ sudo make install

3. Test can interfaces :
   - sudo modprobe can
   - sudo modprobe pcan
   - sudo ip link set can0 up
   - sudo ip link set can1 up
   - sudo ip link set can2 up
   - sudo ip link set can3 up
   - cat /proc/pcan 

H : Setup ASH Codebase
/////////////////////////////////////////////////////////////////////////////

0. Establish internet connection (with wired ethernet)
   $ sudo netcfg ethernet-dhcp
   $ ping google.com

1. Clone ASH Git repository
   $ git clone http://romela.me.vt.edu:8080/git/ash.git 

2. Install dependencies
   $ sudo yaourt -S lua
   $ sudo yaourt -S boost-libs
   $ sudo yaourt -S boost
   $ sudo yaourt -S swig
   $ sudo yaourt -S gnuplot
   $ sudo yaourt -S ncurses
   $ sudo ln -s /usr/lib/liblua.so.5.1.5 /usr/lib/liblua5.1.so

3. Get luajit
   $ git clone http://luajit.org/git/luajit-2.0.git
   $ cd luajit-2.0  
   $ make
   $ sudo make install
