ARCH LINUX INSTALLATION ON ASH'S FIT-PC

A. Boot Arch
////////////////////////////////////////////////////////////////////////////

1. Get arch linux core image installation media
   - download arch core image i686 iso (http://www.archlinux.org/download/)
   - this installation used the august 2011 release
   - create live usb (https://wiki.archlinux.org/index.php/USB_Installation_Media)

2. Boot fit-pc from the live usb
   - make sure the bios is set to boot from usb
   - choose to boot arch linux at the arch start menu
   - type /arch/setup to start the installer
   - see https://wiki.archlinux.org/index.php/Official_Arch_Linux_Install_Guide

B. Install Arch
/////////////////////////////////////////////////////////////////////////////

1. Select source
   - choose core local

2. Set editor
   - choose nano if you don't know vi 

3. Set clock
   - select region and timezone 

4. Prepare hard drive 
   - manually partition hard drives to create the necessary disk partitions
   - manually configure block devices to setup filesystems and mountpoints
   - recommended configuration: 
     [<-- size:   50MB; flags: Boot; part type: primary; filesystem: ext4; mountpoint: /boot -->]
     [<-- size:  500MB; flags:     ; part type: logical; filesystem: swap; mountpoint:       -->]
     [<-- size: 7000MB; flags:     ; part type: primary; filesystem: ext4; mountpoint: /     -->]

5. Select packages
   - choose grub bootloader
   - choose base and base-devel package groups
   - select the following packages to install:
     * ncurses
     * netcfg
     * pacman-mirrorlist
     * sudo
     * wireless_tools
   - deselect the following packages
     * ppp
     * lvm2

6. Install packages

7. Configure system  
   - edit /etc.pacman.d/mirrorlist
     - find the united states section and uncomment the virginia tech server
   - set the root password
    
8. Install bootloader
   - set the timeout parameter to 2

9. Exit Install 
   - type poweroff at the command prompt to shutdown
   - remove live usb, reboot and login as root

C : Add new user
/////////////////////////////////////////////////////////////////////////////

1. Create new user and set passwd
   - useradd -m -g users -G wheel ash
   - passwd ash

2. Add sudo access to the wheel group 
   - visudo 
     - uncomment the following line :
     # %wheel ALL=(ALL) ALL

2. Exit root shell and login as ash

D : Configure networking (example for romela wifi)
/////////////////////////////////////////////////////////////////////////////

1. Create netcfg profile for wifi access
   - sudo cp /etc/network.d/examples/wireless-open /etc/network.d/romela
   - sudo nano /etc/network.d/romela
     - enter these settings for the romela network :
       CONNECTION='wireless'
       DESCRIPTION='romela wireless'
       INTERFACE='wlan0'
       SECURITY='none'
       ESSID='romela'
       IP='dhcp'
       HIDDEN=yes
   - see https://wiki.archlinux.org/index.php/Netcfg

2. Connect to wireless network 
   - sudo netcfg romela
     
3. Configure system network settings
   - sudo nano /etc/rc.conf
     - set the hostname :
         HOSTNAME="ash"
     - set static ip for ethernet connection :
         interface=eth0
         address=192.168.123.1
         netmask=255.255.255.0
         broadcast=192.168.123.255
         gateway=
     - enable automatic wireless connection on startup :
         NETWORKS=(romela)
     - add "net-profiles" to the DAEMONS array

4. Set the hostname
   - sudo nano /etc/hosts
     - add ash after localhost under the <hostname> column

E : Upgrade system
/////////////////////////////////////////////////////////////////////////////

1. Initialize package verification :
   - sudo pacman-key --init
     - (you'll need to type randomly on your keyboard to get this to finish)
   - sudo pacman-key --populate archlinux

2. try to upgrade all packages :
   - sudo pacman -Syu
   - enter no if asked to upgrade pacman first

3. if the upgrade fails (very likely) :
   - search the forums for the specific errors in order to find a solution :
     https://wiki.archlinux.org/index.php/Pacman#Troubleshooting
   - during installation I followed this guide :
     http://allanmcrae.com/2012/07/updating-arch-linux-from-a-core-install/
   - the solution will vary between installations

F : Install utilities 
/////////////////////////////////////////////////////////////////////////////

1. Get yaourt package manager for access to more packages :
   http://archlinux.fr/yaourt-en#get_it

2. Install ssh
   - sudo yaourt -S openssh
   - sudo yaourt -S xorg-xauth
   - sudo nano /etc/ssh/sshd_config
     - set the following options : 
     AllowTcpForwarding yes
     X11Forwarding yes 
     X11DisplayOffset 10
     X11UseLocalHost yes
   - sudo nano /etc/rc.conf
     - add "sshd" to the DAEMONS array
   - see https://wiki.archlinux.org/index.php/Secure_Shell for more options
  
3. Install useful programs 
   - sudo yaourt -S screen acpid vim subversion git

G : Add CAN bus support 
/////////////////////////////////////////////////////////////////////////////

1. Add CAN modules to the linux kernel :
   - cd
   - mkdir kernel
   - pacman -S abs xmlto docbook-xsl
   - ABSROOT=. abs core/linux
   - cd core/linux 
   - sudo nano PKGBUILD 
     - find load configuration section and uncomment "make menuconfig"
   - makepkg
     - eventually the menuconfig kernel configuration interface will appear
       - enter the Networking support menu
       - disable Amateur Radio support
       - enable <M> CAN bus subsystem support
       - enter CAN bus subsystem support menu
         - enable <M> Raw CAN Protocol
         - enable <M> Broadcast Manager CAN Protocol 
         - enable <M> CAN Gateway/Router
       - enter CAN Device Drivers menue
         - enable <M> Virtual Local CAN Interface
         - <M> Virtual Local CAN Interface (vcan)
         - <M> Serial / USB serial CAN Adaptors (slcan)
         - <M> Platform CAN drivers with Netlink support
         - [*]   CAN bit-timing calculation
         - <M> Intel EG20T PCH CAN controller
         - <M> Philips/NXP SJA1000 devices
       - enter CAN USB interfaces menu
         - enable <M> PEAK PCAN-USB/USB Pro interfaces
       - exit menuconfig and choose to save config settings
     - building the kernel will take a LONG time (~ 3 hours)
   - sudo pacman -U linux-3.4.5-1-i686.pkg.tar.xz 
   - sudo pacman -U linux-headers-3.4.5-1-i686.pkg.tar.xz
     - replace "3.4.5-1-i686" with whatever kernel version was compiled
   - see https://wiki.archlinux.org/index.php/Kernels/Compilation/Arch_Build_System

2. Install pcan linux driver :
   - cd
   - mkdir drivers && cd drivers
   - curl -O http://www.peak-system.com/fileadmin/media/linux/files/peak-linux-driver-7.6.tar.gz 
   - tar xzf peak-linux-driver-7.6.tar.gz
   - cd peak-linux-driver-7.6
   - make
     - there may be an error regarding missing a include file: asm/system.h
     - if so you will need to edit pcam_main.c, pcan_fops.c and pcan_fifo.c
       in the driver/src directory and comment out any #include<asm/system.h>
   - sudo make install

3. Test can interfaces :
   - sudo modprobe can pcan
   - sudo ip link set can0 up
   - sudo ip link set can1 up
   - cat /proc/pcan 
   - this should show something like (pcan usb pro example):

*------------- PEAK-System CAN interfaces (www.peak-system.com) -------------
*-------------------------- Release_20120522_n (7.6.0) ----------------------
*------------- [mod] [isa] [pci] [dng] [par] [usb] [pcc] [net] --------------
*--------------------- 2 interfaces @ major 252 found -----------------------
*n -type- ndev --base-- irq --btr- --read-- --write- --irqs-- -errors- status
 0 usbpro can0 ffffffff 001 0x001c 00000000 00000000 00000000 00000000 0x0000
 1 usbpro can1 ffffffff 000 0x001c 00000000 00000000 00000000 00000000 0x0000

4. Enable loading of can modules at boot-up : 
    - sudo nano /etc/rc.conf
      - add can and pcan to the MODULES array

H : Install Saffir Codebase
/////////////////////////////////////////////////////////////////////////////

1. Install dependencies


