#include "co_types.h"
#include "slug_slave.h"

/******************************************************************************
 * slug_slave : CANopen communication interface for motor slug
 * authors : Mike Hopkins, Steve Ressler
 ******************************************************************************/

/* defines motor slug object dictionary entries */
static co_dictionary_entry slug_slave_dictionary[] = {
  {SLUG_NODE_ID, 0x00, CO_UNSIGNED8},
  {SLUG_CAN_BIT_RATE, 0x00, CO_UNSIGNED8},
  {SLUG_OPERATING_MODE, 0x00, CO_UNSIGNED8},
  {SLUG_OPERATING_MODE_DISPLAY, 0x00, CO_UNSIGNED8},
  {SLUG_STATUS_CODE, 0x00, CO_UNSIGNED8},
  {SLUG_ERROR_CODE, 0x00, CO_UNSIGNED8},

  {SLUG_JOINT_FORCE_MAX, 0x01, CO_INTEGER16},
  {SLUG_JOINT_FORCE_MAX, 0x02, CO_INTEGER16},
  {SLUG_JOINT_POSITION_MAX, 0x01, CO_INTEGER16},
  {SLUG_JOINT_POSITION_MAX, 0x02, CO_INTEGER16},
  {SLUG_JOINT_POSITION_MIN, 0x01, CO_INTEGER16},
  {SLUG_JOINT_POSITION_MIN, 0x02, CO_INTEGER16},
  {SLUG_JOINT_VELOCITY_MAX, 0x01, CO_INTEGER16},
  {SLUG_JOINT_VELOCITY_MAX, 0x02, CO_INTEGER16},
  {SLUG_JOINT_FORCE_SETPOINT, 0x01, CO_INTEGER16},
  {SLUG_JOINT_FORCE_SETPOINT, 0x02, CO_INTEGER16},
  {SLUG_JOINT_POSITION_SETPOINT, 0x01, CO_INTEGER16},
  {SLUG_JOINT_POSITION_SETPOINT, 0x02, CO_INTEGER16},
  {SLUG_JOINT_VELOCITY_SETPOINT, 0x01, CO_INTEGER16},
  {SLUG_JOINT_VELOCITY_SETPOINT, 0x02, CO_INTEGER16},
  {SLUG_JOINT_FORCE_ESTIMATE, 0x01, CO_INTEGER16},
  {SLUG_JOINT_FORCE_ESTIMATE, 0x02, CO_INTEGER16},
  {SLUG_JOINT_POSITION_ESTIMATE, 0x01, CO_INTEGER16},
  {SLUG_JOINT_POSITION_ESTIMATE, 0x02, CO_INTEGER16},
  {SLUG_JOINT_VELOCITY_ESTIMATE, 0x01, CO_INTEGER16},
  {SLUG_JOINT_VELOCITY_ESTIMATE, 0x02, CO_INTEGER16},
  {SLUG_JOINT_POSITION_P_GAIN, 0x01, CO_INTEGER16},
  {SLUG_JOINT_POSITION_P_GAIN, 0x02, CO_INTEGER16},
  {SLUG_JOINT_POSITION_I_GAIN, 0x01, CO_INTEGER16},
  {SLUG_JOINT_POSITION_I_GAIN, 0x02, CO_INTEGER16},
  {SLUG_JOINT_POSITION_D_GAIN, 0x01, CO_INTEGER16},
  {SLUG_JOINT_POSITION_D_GAIN, 0x02, CO_INTEGER16},
  {SLUG_JOINT_POSITION_D_BREAK_FREQUENCY, 0x01, CO_INTEGER16},
  {SLUG_JOINT_POSITION_D_BREAK_FREQUENCY, 0x02, CO_INTEGER16},
  {SLUG_JOINT_POSITION_SENSOR_BIAS, 0x01, CO_INTEGER16},
  {SLUG_JOINT_POSITION_SENSOR_BIAS, 0x02, CO_INTEGER16},
  {SLUG_JOINT_POSITION_SENSOR_GAIN, 0x01, CO_INTEGER16},
  {SLUG_JOINT_POSITION_SENSOR_GAIN, 0x02, CO_INTEGER16},
  {SLUG_JOINT_FORCE_DEMAND, 0x01, CO_INTEGER16},
  {SLUG_JOINT_FORCE_DEMAND, 0x02, CO_INTEGER16},

  {SLUG_MOTOR_FORCE_MAX, 0x01, CO_REAL32},
  {SLUG_MOTOR_FORCE_MAX, 0x02, CO_REAL32},
  {SLUG_MOTOR_CURRENT_MAX, 0x01, CO_REAL32},
  {SLUG_MOTOR_CURRENT_MAX, 0x02, CO_REAL32},
  {SLUG_MOTOR_FORCE_SETPOINT, 0x01, CO_REAL32},
  {SLUG_MOTOR_FORCE_SETPOINT, 0x02, CO_REAL32},
  {SLUG_MOTOR_FORCE_ESTIMATE, 0x01, CO_REAL32},
  {SLUG_MOTOR_FORCE_ESTIMATE, 0x02, CO_REAL32},
  {SLUG_MOTOR_CURRENT_ESTIMATE, 0x01, CO_REAL32},
  {SLUG_MOTOR_CURRENT_ESTIMATE, 0x02, CO_REAL32},
  {SLUG_MOTOR_FORCE_FF_CONSTANT, 0x01, CO_REAL32},
  {SLUG_MOTOR_FORCE_FF_CONSTANT, 0x02, CO_REAL32},
  {SLUG_MOTOR_FORCE_P_GAIN, 0x01, CO_REAL32},
  {SLUG_MOTOR_FORCE_P_GAIN, 0x02, CO_REAL32},
  {SLUG_MOTOR_FORCE_I_GAIN, 0x01, CO_REAL32},
  {SLUG_MOTOR_FORCE_I_GAIN, 0x02, CO_REAL32},
  {SLUG_MOTOR_FORCE_D_GAIN, 0x01, CO_REAL32},
  {SLUG_MOTOR_FORCE_D_GAIN, 0x02, CO_REAL32},
  {SLUG_MOTOR_FORCE_D_BREAK_FREQUENCY, 0x01, CO_REAL32},
  {SLUG_MOTOR_FORCE_D_BREAK_FREQUENCY, 0x02, CO_REAL32},
  {SLUG_MOTOR_FORCE_SENSOR_BIAS, 0x01, CO_REAL32},
  {SLUG_MOTOR_FORCE_SENSOR_BIAS, 0x02, CO_REAL32},
  {SLUG_MOTOR_FORCE_SENSOR_GAIN, 0x01, CO_REAL32},
  {SLUG_MOTOR_FORCE_SENSOR_GAIN, 0x02, CO_REAL32},
  {SLUG_MOTOR_CURRENT_DEMAND, 0x01, CO_REAL32},
  {SLUG_MOTOR_CURRENT_DEMAND, 0x02, CO_REAL32},
  {CO_SENTINEL}
};

slug_slave::slug_slave(uint8_t node_id) : co_slave(node_id)
{
  /* initialize object dictionary */
  register_dictionary_entries(slug_slave_dictionary);
}
