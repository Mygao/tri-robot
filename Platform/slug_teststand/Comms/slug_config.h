#ifndef _SLUG_CONFIG_H_
#define _SLUG_CONFIG_H_

#include "slug_slave.h"

// slug_config : sdo and pdo configuration settings for motor slugs
// author : Mike Hopkins
///////////////////////////////////////////////////////////////////////////

#define N_SLUGS                              1

#define NODE_ID                           0x01 
#define CAN_BIT_RATE                      0x01
#define OPERATING_MODE                    0x00

#define JOINT_FORCE_CONSTANT                50
#define JOINT_POSITION_CONSTANT           5000 
#define JOINT_VELOCITY_CONSTANT           1000
#define JOINT_PID_GAIN_CONSTANT             25
#define JOINT_FORCE_MAX                  ( 200.00 * JOINT_FORCE_CONSTANT    )
#define JOINT_POSITION_MAX               (   3.14 * JOINT_POSITION_CONSTANT )
#define JOINT_POSITION_MIN               (  -3.14 * JOINT_POSITION_CONSTANT )
#define JOINT_VELOCITY_MAX               (  15.00 * JOINT_VELOCITY_CONSTANT )
#define JOINT_FORCE_SETPOINT             (   0.00 * JOINT_FORCE_CONSTANT    )
#define JOINT_POSITION_SETPOINT          (   0.00 * JOINT_POSITION_CONSTANT )
#define JOINT_VELOCITY_SETPOINT          (   0.00 * JOINT_VELOCITY_CONSTANT )
#define JOINT_POSITION_SENSOR_BIAS       (   0.00 * JOINT_POSITION_CONSTANT )
#define JOINT_POSITION_P_GAIN            (   0.00 * JOINT_PID_GAIN_CONSTANT )
#define JOINT_POSITION_I_GAIN            (   0.00 * JOINT_PID_GAIN_CONSTANT )
#define JOINT_POSITION_D_GAIN            (   0.00 * JOINT_PID_GAIN_CONSTANT )
#define JOINT_POSITION_D_BREAK_FREQUENCY   100.00

#define MOTOR_FORCE_MAX                   2000.00
#define MOTOR_CURRENT_MAX                   10.00
#define MOTOR_FORCE_SETPOINT                 0.00
#define MOTOR_FORCE_SENSOR_BIAS              0.00
#define MOTOR_FORCE_FF_CONSTANT              1.00 
#define MOTOR_FORCE_P_GAIN                   0.00
#define MOTOR_FORCE_I_GAIN                   0.00
#define MOTOR_FORCE_D_GAIN                   0.00
#define MOTOR_FORCE_D_BREAK_FREQUENCY      100.00

static const int slug_config_node_ids[N_SLUGS] = {
  1
};

static const int slug_config_joint_ids[N_SLUGS][2] = {
  {0, -1}
};

static const co_sdo_setting slug_config_custom_settings[N_SLUGS][20] = {
  { // SLUG 1
    {SLUG_JOINT_POSITION_MAX, 0x01, 0.8 * JOINT_POSITION_CONSTANT},
    {SLUG_JOINT_POSITION_MIN, 0x01,-0.8 * JOINT_POSITION_CONSTANT},
    {SLUG_JOINT_POSITION_MAX, 0x02, 0.8 * JOINT_POSITION_CONSTANT},
    {SLUG_JOINT_POSITION_MIN, 0x02,-0.8 * JOINT_POSITION_CONSTANT},
    {CO_SENTINEL}
  },
};

static const co_sdo_setting slug_config_default_settings[] = {
  {SLUG_NODE_ID, 0x00, NODE_ID},
  {SLUG_CAN_BIT_RATE, 0x00, CAN_BIT_RATE},
  {SLUG_OPERATING_MODE, 0x00, OPERATING_MODE},

  {SLUG_JOINT_FORCE_CONSTANT, 0x00, JOINT_FORCE_CONSTANT},
  {SLUG_JOINT_POSITION_CONSTANT, 0x00, JOINT_POSITION_CONSTANT},
  {SLUG_JOINT_VELOCITY_CONSTANT, 0x00, JOINT_VELOCITY_CONSTANT},
  {SLUG_JOINT_PID_GAIN_CONSTANT, 0x00, JOINT_PID_GAIN_CONSTANT},
  {SLUG_JOINT_FORCE_MAX, 0x01, JOINT_FORCE_MAX},
  {SLUG_JOINT_FORCE_MAX, 0x02, JOINT_FORCE_MAX},
  {SLUG_JOINT_POSITION_MAX, 0x01, JOINT_POSITION_MAX},
  {SLUG_JOINT_POSITION_MAX, 0x02, JOINT_POSITION_MAX},
  {SLUG_JOINT_POSITION_MIN, 0x01, JOINT_POSITION_MIN},
  {SLUG_JOINT_POSITION_MIN, 0x02, JOINT_POSITION_MIN},
  {SLUG_JOINT_VELOCITY_MAX, 0x01, JOINT_VELOCITY_MAX},
  {SLUG_JOINT_VELOCITY_MAX, 0x02, JOINT_VELOCITY_MAX},
  {SLUG_JOINT_FORCE_SETPOINT, 0x01, JOINT_FORCE_SETPOINT},
  {SLUG_JOINT_FORCE_SETPOINT, 0x02, JOINT_FORCE_SETPOINT},
  {SLUG_JOINT_POSITION_SETPOINT, 0x01, JOINT_POSITION_SETPOINT},
  {SLUG_JOINT_POSITION_SETPOINT, 0x02, JOINT_POSITION_SETPOINT},
  {SLUG_JOINT_VELOCITY_SETPOINT, 0x01, JOINT_VELOCITY_SETPOINT},
  {SLUG_JOINT_VELOCITY_SETPOINT, 0x02, JOINT_VELOCITY_SETPOINT},
  {SLUG_JOINT_POSITION_SENSOR_BIAS, 0x01, JOINT_POSITION_SENSOR_BIAS},
  {SLUG_JOINT_POSITION_SENSOR_BIAS, 0x02, JOINT_POSITION_SENSOR_BIAS},
  {SLUG_JOINT_POSITION_P_GAIN, 0x01, JOINT_POSITION_P_GAIN},
  {SLUG_JOINT_POSITION_P_GAIN, 0x02, JOINT_POSITION_P_GAIN},
  {SLUG_JOINT_POSITION_I_GAIN, 0x01, JOINT_POSITION_I_GAIN},
  {SLUG_JOINT_POSITION_I_GAIN, 0x02, JOINT_POSITION_I_GAIN},
  {SLUG_JOINT_POSITION_D_GAIN, 0x01, JOINT_POSITION_D_GAIN},
  {SLUG_JOINT_POSITION_D_GAIN, 0x02, JOINT_POSITION_D_GAIN},
  {SLUG_JOINT_POSITION_D_BREAK_FREQUENCY, 0x01, JOINT_POSITION_D_BREAK_FREQUENCY},
  {SLUG_JOINT_POSITION_D_BREAK_FREQUENCY, 0x02, JOINT_POSITION_D_BREAK_FREQUENCY},

  {SLUG_MOTOR_FORCE_MAX, 0x01, MOTOR_FORCE_MAX},
  {SLUG_MOTOR_FORCE_MAX, 0x02, MOTOR_FORCE_MAX},
  {SLUG_MOTOR_CURRENT_MAX, 0x01, MOTOR_CURRENT_MAX},
  {SLUG_MOTOR_CURRENT_MAX, 0x02, MOTOR_CURRENT_MAX},
  {SLUG_MOTOR_FORCE_SETPOINT, 0x01, MOTOR_FORCE_SETPOINT},
  {SLUG_MOTOR_FORCE_SETPOINT, 0x02, MOTOR_FORCE_SETPOINT},
  {SLUG_MOTOR_FORCE_SENSOR_BIAS, 0x01, MOTOR_FORCE_SENSOR_BIAS},
  {SLUG_MOTOR_FORCE_SENSOR_BIAS, 0x02, MOTOR_FORCE_SENSOR_BIAS},
  {SLUG_MOTOR_FORCE_FF_CONSTANT, 0x01, MOTOR_FORCE_FF_CONSTANT},
  {SLUG_MOTOR_FORCE_FF_CONSTANT, 0x02, MOTOR_FORCE_FF_CONSTANT},
  {SLUG_MOTOR_FORCE_P_GAIN, 0x01, MOTOR_FORCE_P_GAIN},
  {SLUG_MOTOR_FORCE_P_GAIN, 0x02, MOTOR_FORCE_P_GAIN},
  {SLUG_MOTOR_FORCE_I_GAIN, 0x01, MOTOR_FORCE_I_GAIN},
  {SLUG_MOTOR_FORCE_I_GAIN, 0x02, MOTOR_FORCE_I_GAIN},
  {SLUG_MOTOR_FORCE_D_GAIN, 0x01, MOTOR_FORCE_D_GAIN},
  {SLUG_MOTOR_FORCE_D_GAIN, 0x02, MOTOR_FORCE_D_GAIN},
  {SLUG_MOTOR_FORCE_D_BREAK_FREQUENCY, 0x01, MOTOR_FORCE_D_BREAK_FREQUENCY},
  {SLUG_MOTOR_FORCE_D_BREAK_FREQUENCY, 0x02, MOTOR_FORCE_D_BREAK_FREQUENCY},
  {CO_SENTINEL}
};

static const co_pdo_parameter slug_config_pdo_parameters[] = {
  {CO_RPDO1, CO_SYNCHRONOUS + 1, 0, 0},
  {CO_RPDO2, CO_SYNCHRONOUS + 1, 0, 0},
  {CO_RPDO3, CO_SYNCHRONOUS + 1, 0, 0},
  {CO_RPDO4, CO_SYNCHRONOUS + 1, 0, 0},
  {CO_TPDO1, CO_SYNCHRONOUS + 1, 0, 0},
  {CO_TPDO2, CO_SYNCHRONOUS + 1, 0, 0},
  {CO_TPDO3, CO_ASYNCHRONOUS, 500, 0},
  {CO_TPDO4, CO_ASYNCHRONOUS, 0, 0},
  {CO_SENTINEL}
};

static const co_pdo_mapping slug_config_pdo_mappings[] = {
  {CO_RPDO1, 3, {
      CO_ENTRY(SLUG_JOINT_FORCE_SETPOINT, 0x01),
      CO_ENTRY(SLUG_JOINT_POSITION_SETPOINT, 0x01),
      CO_ENTRY(SLUG_JOINT_VELOCITY_SETPOINT, 0x01)
    }
  },
  {CO_RPDO2, 3, {
      CO_ENTRY(SLUG_JOINT_FORCE_SETPOINT, 0x02),
      CO_ENTRY(SLUG_JOINT_POSITION_SETPOINT, 0x02),
      CO_ENTRY(SLUG_JOINT_VELOCITY_SETPOINT, 0x02)
    }
  },
  {CO_RPDO3, 3, {
      CO_ENTRY(SLUG_JOINT_POSITION_P_GAIN, 0x01),
      CO_ENTRY(SLUG_JOINT_POSITION_I_GAIN, 0x01),
      CO_ENTRY(SLUG_JOINT_POSITION_D_GAIN, 0x01)
    }
  },
  {CO_RPDO4, 3, {
      CO_ENTRY(SLUG_JOINT_POSITION_P_GAIN, 0x02),
      CO_ENTRY(SLUG_JOINT_POSITION_I_GAIN, 0x02),
      CO_ENTRY(SLUG_JOINT_POSITION_D_GAIN, 0x02)
    }
  },
  {CO_TPDO1, 3, {
      CO_ENTRY(SLUG_JOINT_FORCE_ESTIMATE, 0x01),
      CO_ENTRY(SLUG_JOINT_POSITION_ESTIMATE, 0x01),
      CO_ENTRY(SLUG_JOINT_VELOCITY_ESTIMATE, 0x01)
    }
  },
  {CO_TPDO2, 3, {
      CO_ENTRY(SLUG_JOINT_FORCE_ESTIMATE, 0x02),
      CO_ENTRY(SLUG_JOINT_POSITION_ESTIMATE, 0x02),
      CO_ENTRY(SLUG_JOINT_VELOCITY_ESTIMATE, 0x02)
    }
  },
  {CO_TPDO3, 2, {
      CO_ENTRY(SLUG_MOTOR_FORCE_ESTIMATE, 0x01),
      CO_ENTRY(SLUG_MOTOR_FORCE_ESTIMATE, 0x02)
    }
  },
  {CO_TPDO4, 1, {
      CO_ENTRY(SLUG_OPERATING_MODE_DISPLAY, 0x00)
    }
  },
  {CO_SENTINEL}
};

#endif
