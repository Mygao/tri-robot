void m( double* m_out, const double* parms, const double* q )
{
  double x0 = cos(q[1]);
  double x1 = -sin(q[1]);
  double x2 = -x1;
  double x3 = -x2;
  double x4 = -x0;
  double x5 = cos(q[2]);
  double x6 = x4*x5;
  double x7 = upperArmLength*x6;
  double x8 = cos(q[3]);
  double x9 = -x6;
  double x10 = -x9;
  double x11 = sin(q[2]);
  double x12 = x11*x4;
  double x13 = -x12;
  double x14 = sin(q[3]);
  double x15 = x13*x14 + x2*x8;
  double x16 = elbowOffsetX*x9;
  double x17 = x14*x16 + x7*x8;
  double x18 = -x15;
  double x19 = x12*x8 + x14*x2;
  double x20 = cos(q[4]);
  double x21 = sin(q[4]);
  double x22 = x10*x21 + x19*x20;
  double x23 = lowerArmLength*x10 + x17;
  double x24 = upperArmLength*x0*x11;
  double x25 = -x24;
  double x26 = elbowOffsetX*x3 + x25;
  double x27 = -elbowOffsetX;
  double x28 = lowerArmLength*x19 + x18*x27 + x26;
  double x29 = x20*x28 + x21*x23;
  double x30 = -x22;
  double x31 = cos(q[5]);
  double x32 = x19*x21 + x20*x9;
  double x33 = -x32;
  double x34 = sin(q[5]);
  double x35 = x18*x31 + x33*x34;
  double x36 = -x7;
  double x37 = x14*x36 + x16*x8;
  double x38 = -x16 + x37;
  double x39 = -x34;
  double x40 = x29*x31 + x38*x39;
  double x41 = cos(q[6]);
  double x42 = x18*x34 + x31*x32;
  double x43 = -x42;
  double x44 = sin(q[6]);
  double x45 = x22*x41 + x43*x44;
  double x46 = -x35;
  double x47 = -x46;
  double x48 = -x21;
  double x49 = x20*x23 + x28*x48;
  double x50 = x40*x41 + x44*x49;
  double x51 = parms[67]*x47 + parms[68]*x45 + parms[69]*x50 + parms[76]*x45 + parms[78]*x47 + parms[79]*x50;
  double x52 = x22*x44 + x41*x42;
  double x53 = -x52;
  double x54 = -x40;
  double x55 = x41*x49 + x44*x54;
  double x56 = parms[66]*x46 + parms[68]*x53 + parms[69]*x55 + parms[76]*x53 + parms[77]*x46 + parms[79]*x55;
  double x57 = -x44;
  double x58 = parms[57]*x30 + parms[58]*x35 + parms[59]*x40 + x41*x51 + x56*x57;
  double x59 = -x38;
  double x60 = x29*x39 + x31*x59;
  double x61 = -x45;
  double x62 = -x60;
  double x63 = parms[56]*x22 + parms[58]*x43 + parms[59]*x60 - parms[66]*x61 - parms[67]*x52 - parms[69]*x62 - parms[77]*x61 - parms[78]*x52 - parms[79]*x62;
  double x64 = parms[47]*x18 + parms[48]*x22 + parms[49]*x29 + x31*x58 + x39*x63;
  double x65 = parms[46]*x15 + parms[48]*x33 + parms[49]*x49 + parms[56]*x46 + parms[57]*x42 + parms[59]*x49 + x41*x56 + x44*x51;
  double x66 = x20*x65 + x21*x64;
  double x67 = parms[37]*x10 + parms[38]*x15 + parms[39]*x17 + x66;
  double x68 = -x31;
  double x69 = parms[46]*x30 + parms[47]*x32 + parms[49]*x38 + x39*x58 + x63*x68;
  double x70 = parms[36]*x9 - parms[38]*x19 + parms[39]*x37 + x69;
  double x71 = -x14;
  double x72 = parms[27]*x3 + parms[28]*x6 + parms[29]*x7 + x67*x8 + x70*x71;
  double x73 = x20*x64 + x48*x65;
  double x74 = parms[36]*x18 + parms[37]*x19 + parms[39]*x26 + x73;
  double x75 = parms[26]*x2 + parms[28]*x13 + parms[29]*x24 - x74;
  double x76 = -x11;
  double x77 = -parms[38];
  double x78 = -x49;
  double x79 = -x55;
  double x80 = parms[60]*x52 + parms[61]*x45 + parms[62]*x46 + parms[67]*x62 + parms[68]*x79 + parms[71]*x46 + parms[73]*x52 + parms[74]*x45 + parms[76]*x79 + parms[78]*x62;
  double x81 = -x62;
  double x82 = parms[72]*x46 + parms[74]*x52 + parms[75]*x45 + parms[76]*x50 + parms[77]*x81;
  double x83 = parms[61]*x52 + parms[63]*x45 + parms[64]*x46 + parms[66]*x81 + parms[68]*x50 + x82;
  double x84 = parms[50]*x42 + parms[51]*x35 + parms[52]*x22 + parms[57]*x49 + parms[58]*x62 + x41*x80 + x57*x83;
  double x85 = -x50;
  double x86 = parms[62]*x52 + parms[64]*x45 + parms[65]*x46 + parms[66]*x55 + parms[67]*x85 + parms[70]*x46 + parms[71]*x52 + parms[72]*x45 + parms[77]*x55 + parms[78]*x85;
  double x87 = parms[51]*x42 + parms[53]*x35 + parms[54]*x22 + parms[56]*x78 + parms[58]*x40 - x86;
  double x88 = parms[40]*x32 + parms[41]*x22 + parms[42]*x15 + parms[47]*x38 + parms[48]*x78 + x31*x84 + x39*x87;
  double x89 = parms[52]*x42 + parms[54]*x35 + parms[55]*x22 + parms[56]*x60 + parms[57]*x54 + x41*x83 + x44*x80;
  double x90 = parms[41]*x32 + parms[43]*x22 + parms[44]*x15 + parms[46]*x59 + parms[48]*x29 + x89;
  double x91 = lowerArmLength*x73 + parms[30]*x19 + parms[31]*x15 + parms[32]*x9 + parms[37]*x26 + x20*x90 + x21*x88 + x37*x77;
  double x92 = -parms[47];
  double x93 = parms[42]*x32 + parms[44]*x22 + parms[45]*x15 + parms[46]*x49 + x29*x92 + x39*x84 + x68*x87;
  double x94 = -parms[36];
  double x95 = elbowOffsetX*x73 + parms[31]*x19 + parms[33]*x15 + parms[34]*x9 + parms[38]*x17 + x26*x94 + x93;
  double x96 = parms[20]*x12 + parms[21]*x6 + parms[22]*x2 + parms[28]*x25 + x71*x95 + x8*x91;
  double x97 = -parms[37];
  double x98 = -lowerArmLength;
  double x99 = parms[32]*x19 + parms[34]*x15 + parms[35]*x9 + parms[36]*x37 + x17*x97 + x20*x88 + x27*x69 + x48*x90 + x66*x98;
  double x100 = parms[21]*x12 + parms[23]*x6 + parms[24]*x2 + parms[28]*x7 + x27*(x14*x67 + x70*x8) - x99;
  double x101 = -x5;
  double x102 = parms[22]*x12 + parms[24]*x6 + parms[25]*x2 + parms[26]*x24 + parms[27]*x36 + x14*x91 + x27*x74 + x8*x95;
  double x103 = parms[12]*x0 + parms[14]*x1 + upperArmLength*(x101*x75 + x72*x76) + x100*x76 + x5*x96;
  double x104 = upperArmLength*x76;
  double x105 = -x76;
  double x106 = -x105;
  double x107 = x5*x71;
  double x108 = elbowOffsetX*x105;
  double x109 = x104*x8 + x108*x14;
  double x110 = -x107;
  double x111 = x5*x8;
  double x112 = x105*x48 + x111*x20;
  double x113 = lowerArmLength*x106 + x109;
  double x114 = upperArmLength*x101;
  double x115 = -x114;
  double x116 = lowerArmLength*x111 + x110*x27 + x115;
  double x117 = x113*x21 + x116*x20;
  double x118 = -x112;
  double x119 = x105*x20 + x111*x21;
  double x120 = x107*x68 + x119*x39;
  double x121 = x104*x71 + x108*x8;
  double x122 = x105*x27 + x121;
  double x123 = x117*x31 + x122*x39;
  double x124 = x107*x39 + x119*x31;
  double x125 = x112*x41 + x124*x57;
  double x126 = -x120;
  double x127 = -x126;
  double x128 = x113*x20 + x116*x48;
  double x129 = x123*x41 + x128*x44;
  double x130 = parms[67]*x127 + parms[68]*x125 + parms[69]*x129 + parms[76]*x125 + parms[78]*x127 + parms[79]*x129;
  double x131 = x112*x44 + x124*x41;
  double x132 = -x131;
  double x133 = x123*x57 + x128*x41;
  double x134 = parms[66]*x126 + parms[68]*x132 + parms[69]*x133 + parms[76]*x132 + parms[77]*x126 + parms[79]*x133;
  double x135 = parms[57]*x118 + parms[58]*x120 + parms[59]*x123 + x130*x41 + x134*x57;
  double x136 = x117*x39 + x122*x68;
  double x137 = -x125;
  double x138 = -x136;
  double x139 = parms[56]*x112 - parms[58]*x124 + parms[59]*x136 - parms[66]*x137 - parms[67]*x131 - parms[69]*x138 - parms[77]*x137 - parms[78]*x131 - parms[79]*x138;
  double x140 = parms[47]*x110 + parms[48]*x112 + parms[49]*x117 + x135*x31 + x139*x39;
  double x141 = parms[46]*x107 - parms[48]*x119 + parms[49]*x128 + parms[56]*x126 + parms[57]*x124 + parms[59]*x128 + x130*x44 + x134*x41;
  double x142 = x140*x21 + x141*x20;
  double x143 = parms[37]*x106 + parms[38]*x107 + parms[39]*x109 + x142;
  double x144 = parms[46]*x118 + parms[47]*x119 + parms[49]*x122 + x135*x39 + x139*x68;
  double x145 = parms[36]*x105 - parms[38]*x111 + parms[39]*x121 + x144;
  double x146 = x140*x20 + x141*x48;
  double x147 = parms[36]*x110 + parms[37]*x111 + parms[39]*x115 + x146;
  double x148 = -x128;
  double x149 = -x133;
  double x150 = parms[60]*x131 + parms[61]*x125 + parms[62]*x126 + parms[67]*x138 + parms[68]*x149 + parms[71]*x126 + parms[73]*x131 + parms[74]*x125 + parms[76]*x149 + parms[78]*x138;
  double x151 = -x138;
  double x152 = parms[72]*x126 + parms[74]*x131 + parms[75]*x125 + parms[76]*x129 + parms[77]*x151;
  double x153 = parms[61]*x131 + parms[63]*x125 + parms[64]*x126 + parms[66]*x151 + parms[68]*x129 + x152;
  double x154 = parms[50]*x124 + parms[51]*x120 + parms[52]*x112 + parms[57]*x128 + parms[58]*x138 + x150*x41 + x153*x57;
  double x155 = -x129;
  double x156 = parms[62]*x131 + parms[64]*x125 + parms[65]*x126 + parms[66]*x133 + parms[67]*x155 + parms[70]*x126 + parms[71]*x131 + parms[72]*x125 + parms[77]*x133 + parms[78]*x155;
  double x157 = parms[51]*x124 + parms[53]*x120 + parms[54]*x112 + parms[56]*x148 + parms[58]*x123 - x156;
  double x158 = parms[40]*x119 + parms[41]*x112 + parms[42]*x107 + parms[47]*x122 + parms[48]*x148 + x154*x31 + x157*x39;
  double x159 = -parms[57];
  double x160 = parms[52]*x124 + parms[54]*x120 + parms[55]*x112 + parms[56]*x136 + x123*x159 + x150*x44 + x153*x41;
  double x161 = -parms[46];
  double x162 = parms[41]*x119 + parms[43]*x112 + parms[44]*x107 + parms[48]*x117 + x122*x161 + x160;
  double x163 = lowerArmLength*x146 + parms[30]*x111 + parms[31]*x107 + parms[32]*x105 + parms[37]*x115 + x121*x77 + x158*x21 + x162*x20;
  double x164 = parms[42]*x119 + parms[44]*x112 + parms[45]*x107 + parms[46]*x128 + x117*x92 + x154*x39 + x157*x68;
  double x165 = elbowOffsetX*x146 + parms[31]*x111 + parms[33]*x107 + parms[34]*x105 + parms[38]*x109 + x115*x94 + x164;
  double x166 = parms[32]*x111 + parms[34]*x107 + parms[35]*x105 + parms[36]*x121 + x109*x97 + x142*x98 + x144*x27 + x158*x20 + x162*x48;
  double x167 = parms[22]*x5 + parms[24]*x76 + parms[26]*x114 - parms[27]*x104 + x14*x163 + x147*x27 + x165*x8;
  double x168 = -x8;
  double x169 = x14*x20;
  double x170 = lowerArmLength*x14 + x168*x27 + x27;
  double x171 = x170*x20;
  double x172 = -x169;
  double x173 = x14*x21;
  double x174 = x173*x39 + x68*x8;
  double x175 = x171*x31;
  double x176 = x173*x31 + x39*x8;
  double x177 = x169*x41 + x176*x57;
  double x178 = -x174;
  double x179 = -x178;
  double x180 = x170*x48;
  double x181 = x175*x41 + x180*x44;
  double x182 = parms[67]*x179 + parms[68]*x177 + parms[69]*x181 + parms[76]*x177 + parms[78]*x179 + parms[79]*x181;
  double x183 = x169*x44 + x176*x41;
  double x184 = -x183;
  double x185 = x175*x57 + x180*x41;
  double x186 = parms[66]*x178 + parms[68]*x184 + parms[69]*x185 + parms[76]*x184 + parms[77]*x178 + parms[79]*x185;
  double x187 = parms[57]*x172 + parms[58]*x174 + parms[59]*x175 + x182*x41 + x186*x57;
  double x188 = x171*x39;
  double x189 = -x177;
  double x190 = -x188;
  double x191 = parms[56]*x169 - parms[58]*x176 + parms[59]*x188 - parms[66]*x189 - parms[67]*x183 - parms[69]*x190 - parms[77]*x189 - parms[78]*x183 - parms[79]*x190;
  double x192 = parms[47]*x168 + parms[48]*x169 + parms[49]*x171 + x187*x31 + x191*x39;
  double x193 = parms[46]*x8 - parms[48]*x173 + parms[49]*x180 + parms[56]*x178 + parms[57]*x176 + parms[59]*x180 + x182*x44 + x186*x41;
  double x194 = x192*x20 + x193*x48;
  double x195 = -x180;
  double x196 = -x185;
  double x197 = parms[60]*x183 + parms[61]*x177 + parms[62]*x178 + parms[67]*x190 + parms[68]*x196 + parms[71]*x178 + parms[73]*x183 + parms[74]*x177 + parms[76]*x196 + parms[78]*x190;
  double x198 = -x190;
  double x199 = parms[72]*x178 + parms[74]*x183 + parms[75]*x177 + parms[76]*x181 + parms[77]*x198;
  double x200 = parms[61]*x183 + parms[63]*x177 + parms[64]*x178 + parms[66]*x198 + parms[68]*x181 + x199;
  double x201 = parms[50]*x176 + parms[51]*x174 + parms[52]*x169 + parms[57]*x180 + parms[58]*x190 + x197*x41 + x200*x57;
  double x202 = -x181;
  double x203 = parms[62]*x183 + parms[64]*x177 + parms[65]*x178 + parms[66]*x185 + parms[67]*x202 + parms[70]*x178 + parms[71]*x183 + parms[72]*x177 + parms[77]*x185 + parms[78]*x202;
  double x204 = parms[51]*x176 + parms[53]*x174 + parms[54]*x169 + parms[56]*x195 + parms[58]*x175 - x203;
  double x205 = parms[40]*x173 + parms[41]*x169 + parms[42]*x8 + parms[48]*x195 + x201*x31 + x204*x39;
  double x206 = parms[52]*x176 + parms[54]*x174 + parms[55]*x169 + parms[56]*x188 + x159*x175 + x197*x44 + x200*x41;
  double x207 = parms[41]*x173 + parms[43]*x169 + parms[44]*x8 + parms[48]*x171 + x206;
  double x208 = parms[42]*x173 + parms[44]*x169 + parms[45]*x8 + parms[46]*x180 + x171*x92 + x201*x39 + x204*x68;
  double x209 = parms[32]*x14 + parms[34]*x8 + x20*x205 + x207*x48 + x27*(parms[46]*x172 + parms[47]*x173 + x187*x39 + x191*x68) + x98*(x192*x21 + x193*x20);
  double x210 = x20*x98;
  double x211 = -x210;
  double x212 = x20*x31;
  double x213 = x20*x39;
  double x214 = lowerArmLength*x48;
  double x215 = x214*x39 + x27*x68;
  double x216 = -x215;
  double x217 = -x213;
  double x218 = x212*x41 + x44*x48;
  double x219 = x212*x57 + x41*x48;
  double x220 = x214*x31 + x27*x39;
  double x221 = x210*x41 + x220*x57;
  double x222 = -x221;
  double x223 = parms[60]*x218 + parms[61]*x219 + parms[62]*x217 + parms[67]*x216 + parms[68]*x222 + parms[71]*x217 + parms[73]*x218 + parms[74]*x219 + parms[76]*x222 + parms[78]*x216;
  double x224 = x210*x44 + x220*x41;
  double x225 = -x216;
  double x226 = parms[72]*x217 + parms[74]*x218 + parms[75]*x219 + parms[76]*x224 + parms[77]*x225;
  double x227 = parms[61]*x218 + parms[63]*x219 + parms[64]*x217 + parms[66]*x225 + parms[68]*x224 + x226;
  double x228 = parms[50]*x212 + parms[51]*x213 + parms[52]*x48 + parms[57]*x210 + parms[58]*x216 + x223*x41 + x227*x57;
  double x229 = -x224;
  double x230 = parms[62]*x218 + parms[64]*x219 + parms[65]*x217 + parms[66]*x221 + parms[67]*x229 + parms[70]*x217 + parms[71]*x218 + parms[72]*x219 + parms[77]*x221 + parms[78]*x229;
  double x231 = parms[51]*x212 + parms[53]*x213 + parms[54]*x48 + parms[56]*x211 + parms[58]*x220 - x230;
  double x232 = -x48;
  double x233 = -x217;
  double x234 = parms[67]*x233 + parms[68]*x219 + parms[69]*x224 + parms[76]*x219 + parms[78]*x233 + parms[79]*x224;
  double x235 = -x218;
  double x236 = parms[66]*x217 + parms[68]*x235 + parms[69]*x221 + parms[76]*x235 + parms[77]*x217 + parms[79]*x221;
  double x237 = parms[57]*x232 + parms[58]*x213 + parms[59]*x220 + x234*x41 + x236*x57;
  double x238 = -x219;
  double x239 = parms[56]*x48 - parms[58]*x212 + parms[59]*x215 - parms[66]*x238 - parms[67]*x218 - parms[69]*x216 - parms[77]*x238 - parms[78]*x218 - parms[79]*x216;
  double x240 = parms[52]*x212 + parms[54]*x213 + parms[55]*x48 + parms[56]*x215 + x159*x220 + x223*x44 + x227*x41;
  double x241 = parms[42]*x20 + parms[44]*x48 + parms[46]*x210 + x214*x92 + x228*x39 + x231*x68;
  double x242 = -x68;
  double x243 = x39*x41;
  double x244 = x39*x57;
  double x245 = parms[60]*x243 + parms[61]*x244 + parms[62]*x242 + parms[71]*x242 + parms[73]*x243 + parms[74]*x244;
  double x246 = parms[72]*x242 + parms[74]*x243 + parms[75]*x244;
  double x247 = parms[61]*x243 + parms[63]*x244 + parms[64]*x242 + x246;
  double x248 = parms[62]*x243 + parms[64]*x244 + parms[65]*x242 + parms[70]*x242 + parms[71]*x243 + parms[72]*x244;
  double x249 = parms[52]*x39 + parms[54]*x68 + x245*x44 + x247*x41;
  double x250 = parms[74]*x44 + parms[75]*x41;
  double x251 = parms[62]*x44 + parms[64]*x41 + parms[71]*x44 + parms[72]*x41;
//
  m_out[0] = parms[5] + x0*(parms[10]*x0 + parms[11]*x1 - upperArmLength*(x5*x72 + x75*x76) + x100*x101 + x76*x96) + x1*(parms[11]*x0 + parms[13]*x1 - x102);
  m_out[1] = x103;
  m_out[2] = x102;
  m_out[3] = x99;
  m_out[4] = x93;
  m_out[5] = x89;
  m_out[6] = x86;
  m_out[7] = x82;
  m_out[8] = x103;
  m_out[9] = parms[15] + upperArmLength*(x101*(parms[28]*x101 + parms[29]*x114 - x147) + x76*(parms[28]*x76 + parms[29]*x104 + x143*x8 + x145*x71)) + x5*(parms[20]*x5 + parms[21]*x76 + parms[28]*x115 + x163*x8 + x165*x71) + x76*(parms[21]*x5 + parms[23]*x76 + parms[28]*x104 - x166 + x27*(x14*x143 + x145*x8));
  m_out[10] = x167;
  m_out[11] = x166;
  m_out[12] = x164;
  m_out[13] = x160;
  m_out[14] = x156;
  m_out[15] = x152;
  m_out[16] = x102;
  m_out[17] = x167;
  m_out[18] = parms[25] + x14*(lowerArmLength*x194 + parms[30]*x14 + parms[31]*x8 + parms[37]*x27 + x20*x207 + x205*x21) + x27*(parms[36]*x168 + parms[37]*x14 + parms[39]*x27 + x194) + x8*(elbowOffsetX*x194 + parms[31]*x14 + parms[33]*x8 + x208 + x27*x94);
  m_out[19] = x209;
  m_out[20] = x208;
  m_out[21] = x206;
  m_out[22] = x203;
  m_out[23] = x199;
  m_out[24] = x99;
  m_out[25] = x166;
  m_out[26] = x209;
  m_out[27] = parms[35] + x20*(parms[40]*x20 + parms[41]*x48 + parms[47]*x27 + parms[48]*x211 + x228*x31 + x231*x39) + x27*(parms[46]*x232 + parms[47]*x20 + parms[49]*x27 + x237*x39 + x239*x68) + x48*(parms[41]*x20 + parms[43]*x48 + parms[48]*x214 + x161*x27 + x240) + x98*(x20*(-parms[48]*x20 + parms[49]*x210 + parms[56]*x217 + parms[57]*x212 + parms[59]*x210 + x234*x44 + x236*x41) + x21*(parms[48]*x48 + parms[49]*x214 + x237*x31 + x239*x39));
  m_out[28] = x241;
  m_out[29] = x240;
  m_out[30] = x230;
  m_out[31] = x226;
  m_out[32] = x93;
  m_out[33] = x164;
  m_out[34] = x208;
  m_out[35] = x241;
  m_out[36] = parms[45] + x39*(parms[50]*x39 + parms[51]*x68 + x245*x41 + x247*x57) + x68*(parms[51]*x39 + parms[53]*x68 - x248);
  m_out[37] = x249;
  m_out[38] = x248;
  m_out[39] = x246;
  m_out[40] = x89;
  m_out[41] = x160;
  m_out[42] = x206;
  m_out[43] = x240;
  m_out[44] = x249;
  m_out[45] = parms[55] + x41*(parms[61]*x44 + parms[63]*x41 + x250) + x44*(parms[60]*x44 + parms[61]*x41 + parms[73]*x44 + parms[74]*x41);
  m_out[46] = x251;
  m_out[47] = x250;
  m_out[48] = x86;
  m_out[49] = x156;
  m_out[50] = x203;
  m_out[51] = x230;
  m_out[52] = x248;
  m_out[53] = x251;
  m_out[54] = parms[65] + parms[70];
  m_out[55] = parms[72];
  m_out[56] = x82;
  m_out[57] = x152;
  m_out[58] = x199;
  m_out[59] = x226;
  m_out[60] = x246;
  m_out[61] = x250;
  m_out[62] = parms[72];
  m_out[63] = parms[75];
//
  return;
}