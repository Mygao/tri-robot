Matrix([[L_1yy + L_2zz], [L_2xx - L_2zz + L_3zz + 123*l_3y/250 + 15129*m_3/250000 + 15129*m_4/250000 + 15129*m_5/250000 + 15129*m_6/250000 + 15129*m_7/250000 + 15129*m_8/250000], [L_2xy], [L_2xz], [L_2yy + L_3zz + 123*l_3y/250 + 15129*m_3/250000 + 15129*m_4/250000 + 15129*m_5/250000 + 15129*m_6/250000 + 15129*m_7/250000 + 15129*m_8/250000], [L_2yz], [l_2x], [l_2z + l_3y + 123*m_3/500 + 123*m_4/500 + 123*m_5/500 + 123*m_6/500 + 123*m_7/500 + 123*m_8/500], [L_3xx - L_3zz + L_4zz - 9*m_4/10000 - 9*m_5/10000 - 9*m_6/10000 - 9*m_7/10000 - 9*m_8/10000], [L_3xy], [L_3xz], [L_3yy + L_4zz - 9*m_4/10000 - 9*m_5/10000 - 9*m_6/10000 - 9*m_7/10000 - 9*m_8/10000], [L_3yz], [l_3x], [l_3z + l_4y], [L_4xx - L_4zz + L_5zz - l_5y/2 + 9*m_4/10000 + m_5/16 + m_6/16 + m_7/16 + m_8/16], [L_4xy - 3*l_4y/100], [L_4xz], [L_4yy + L_5zz - l_5y/2 - 9*m_4/10000 + 607*m_5/10000 + 607*m_6/10000 + 607*m_7/10000 + 607*m_8/10000], [L_4yz], [l_4x + 3*m_4/100 + 3*m_5/100 + 3*m_6/100 + 3*m_7/100 + 3*m_8/100], [l_4z - l_5y + m_5/4 + m_6/4 + m_7/4 + m_8/4], [L_5xx - L_5zz + L_6zz + 9*m_5/10000 + 9*m_6/10000 + 9*m_7/10000 + 9*m_8/10000], [L_5xy + 3*l_5y/100], [L_5xz], [L_5yy + L_6zz - 9*m_5/10000 - 9*m_6/10000 - 9*m_7/10000 - 9*m_8/10000], [L_5yz], [l_5x - 3*m_5/100 - 3*m_6/100 - 3*m_7/100 - 3*m_8/100], [l_5z - l_6y], [L_6xx - L_6zz + L_7zz], [L_6xy], [L_6xz], [L_6yy + L_7zz], [L_6yz], [l_6x], [l_6z + l_7y], [L_7xx - L_7zz + L_8zz], [L_7xy], [L_7xz], [L_7yy + L_8zz], [L_7yz], [l_7x], [l_7z - l_8y], [L_8xx - L_8zz], [L_8xy], [L_8xz], [L_8yy], [L_8yz], [l_8x], [l_8z]])
void tau( double* tau_out, const double* parms, const double* q, const double* dq, const double* ddq )
{
  double x0 = sin(q[1]);
  double x1 = -dq[0];
  double x2 = cos(q[1]);
  double x3 = x1*x2;
  double x4 = -ddq[0];
  double x5 = dq[1]*x3 + x0*x4;
  double x6 = x0*x1;
  double x7 = dq[1]*parms[13] + parms[11]*x3 + parms[14]*x6;
  double x8 = dq[1]*parms[11] + parms[10]*x3 + parms[12]*x6;
  double x9 = -9.81*x2;
  double x10 = -x6;
  double x11 = dq[1]*x10 + x2*x4;
  double x12 = -dq[3];
  double x13 = dq[2] + x6;
  double x14 = cos(q[3]);
  double x15 = -x14;
  double x16 = x13*x15;
  double x17 = sin(q[2]);
  double x18 = x17*x3;
  double x19 = cos(q[2]);
  double x20 = dq[1]*x19;
  double x21 = -x18 + x20;
  double x22 = sin(q[3]);
  double x23 = x21*x22;
  double x24 = x16 + x23;
  double x25 = ddq[1]*x19;
  double x26 = -x17;
  double x27 = dq[1]*x17;
  double x28 = x19*x3;
  double x29 = x27 + x28;
  double x30 = -dq[2];
  double x31 = x11*x26 + x25 + x29*x30;
  double x32 = ddq[2] + x5;
  double x33 = x12*x24 + x14*x31 + x22*x32;
  double x34 = ((x14)*(x14));
  double x35 = ((x22)*(x22));
  double x36 = 0.03*x34 + 0.03*x35;
  double x37 = x22*x31;
  double x38 = -0.246*x27 - 0.246*x28;
  double x39 = -0.246*x17;
  double x40 = dq[2]*x38 + x11*x39 + x19*x9 + 0.246*x25;
  double x41 = x15*x32;
  double x42 = x13*x22 + x14*x21;
  double x43 = -x42;
  double x44 = -0.03*dq[3];
  double x45 = x36*x37 + x36*x41 + x40 + x43*x44;
  double x46 = x14*x38;
  double x47 = -0.246*x18 + 0.246*x20;
  double x48 = x16*x36 + x23*x36 + x47;
  double x49 = parms[36]*x24 + parms[38]*x43 + parms[39]*x48;
  double x50 = -x24;
  double x51 = dq[3] + x29;
  double x52 = parms[37]*x50 + parms[38]*x51 + parms[39]*x46;
  double x53 = dq[3]*x42 + x37 + x41;
  double x54 = -x53;
  double x55 = -ddq[4] + x54;
  double x56 = sin(q[4]);
  double x57 = x51*x56;
  double x58 = cos(q[4]);
  double x59 = x42*x58;
  double x60 = x57 + x59;
  double x61 = -0.03*dq[4];
  double x62 = -0.03*((x56)*(x56)) - 0.03*((x58)*(x58));
  double x63 = x42*x56;
  double x64 = 0.25*x58;
  double x65 = x24*x62 + x46*x58 + x48*x56 + x51*x64 - 0.25*x63;
  double x66 = x61 + x65;
  double x67 = -x58;
  double x68 = x51*x67 + x63;
  double x69 = -0.03*x34 - 0.03*x35;
  double x70 = x22*x38 + x29*x69;
  double x71 = x44 + x70;
  double x72 = -x71;
  double x73 = x57*x62 + x59*x62 + x72;
  double x74 = -parms[48];
  double x75 = -dq[4];
  double x76 = x50 + x75;
  double x77 = parms[40]*x68 + parms[41]*x76 + parms[42]*x60 + parms[47]*x66 + x73*x74;
  double x78 = -x60;
  double x79 = x46*x56 + x48*x67 + 0.25*x57 + 0.25*x59;
  double x80 = parms[47]*x78 + parms[48]*x76 + parms[49]*x79;
  double x81 = cos(q[5]);
  double x82 = sin(q[5]);
  double x83 = -x82;
  double x84 = x73*x81 + x79*x83;
  double x85 = -dq[5];
  double x86 = x78 + x85;
  double x87 = -x66;
  double x88 = -parms[58];
  double x89 = x68*x81 + x76*x82;
  double x90 = -x68;
  double x91 = x76*x81 + x82*x90;
  double x92 = parms[50]*x89 + parms[51]*x86 + parms[52]*x91 + parms[57]*x84 + x87*x88;
  double x93 = -x86;
  double x94 = x73*x82 + x79*x81;
  double x95 = parms[56]*x91 + parms[59]*x87 + x88*x89;
  double x96 = cos(q[6]);
  double x97 = sin(q[6]);
  double x98 = x87*x97 + x94*x96;
  double x99 = x11*x19;
  double x100 = ddq[1]*x17;
  double x101 = dq[2]*x21 + x100 + x99;
  double x102 = ddq[3] + x101;
  double x103 = x102*x56;
  double x104 = -9.81*x0;
  double x105 = -0.246*x100 + x26*x9 + x30*x47 - 0.246*x99;
  double x106 = x104*x22 + x105*x14 + x12*x70 + x29*x44;
  double x107 = x33*x58;
  double x108 = -x75;
  double x109 = 0.25*x103 + x106*x56 + 0.25*x107 + x108*x65 + x45*x67 + x50*x61;
  double x110 = -0.03*ddq[3] + dq[3]*x46 + x101*x69 + x104*x15 + x105*x22;
  double x111 = -x110;
  double x112 = x103*x62 + x107*x62 + x111 + x61*x90;
  double x113 = -x85;
  double x114 = x109*x81 + x112*x82 + x113*x84;
  double x115 = x33*x56;
  double x116 = -0.03*ddq[4] + x102*x64 + x106*x58 - 0.25*x115 + x45*x56 + x53*x62 + x75*x79;
  double x117 = -x116;
  double x118 = -x96;
  double x119 = dq[6]*x98 + x114*x97 + x117*x118;
  double x120 = -x119;
  double x121 = x118*x86 + x89*x97;
  double x122 = x86*x97 + x89*x96;
  double x123 = dq[6] + x91;
  double x124 = x118*x87 + x94*x97;
  double x125 = -x84;
  double x126 = parms[60]*x122 + parms[61]*x123 + parms[62]*x121 + parms[67]*x124 + parms[68]*x125;
  double x127 = -x98;
  double x128 = -x123;
  double x129 = parms[66]*x128 + parms[67]*x122 + parms[69]*x124;
  double x130 = -dq[6];
  double x131 = x103 + x107 + x68*x75;
  double x132 = -x131;
  double x133 = -ddq[5] + x132;
  double x134 = x102*x67 + x108*x60 + x115;
  double x135 = x113*x91 + x134*x81 + x55*x82;
  double x136 = x121*x130 + x133*x97 + x135*x96;
  double x137 = x134*x83 + x55*x81 + x85*x89;
  double x138 = ddq[6] + x137;
  double x139 = dq[6]*x122 + x118*x133 + x135*x97;
  double x140 = -x122;
  double x141 = parms[62]*x122 + parms[64]*x123 + parms[65]*x121 + parms[66]*x84 + parms[67]*x127;
  double x142 = -x139;
  double x143 = -ddq[7] + x142;
  double x144 = -dq[7];
  double x145 = -x121;
  double x146 = x144 + x145;
  double x147 = -x124;
  double x148 = -x125;
  double x149 = parms[72]*x128 + parms[74]*x146 + parms[75]*x122 + parms[76]*x147 + parms[77]*x148;
  double x150 = -x138;
  double x151 = -x144;
  double x152 = x122*x151 + x150;
  double x153 = -parms[78];
  double x154 = parms[76]*x122 + parms[79]*x147 + x128*x153;
  double x155 = x128*x144 + x136;
  double x156 = -parms[76];
  double x157 = parms[77]*x128 + parms[79]*x98 + x146*x156;
  double x158 = parms[71]*x128 + parms[73]*x146 + parms[74]*x122 + parms[76]*x127 + parms[78]*x125;
  double x159 = x114*x96 + x117*x97 + x124*x130;
  double x160 = x125*x144 + x159;
  double x161 = parms[67]*x145 + parms[68]*x123 + parms[69]*x98;
  double x162 = parms[61]*x136 + parms[63]*x138 + parms[64]*x139 + parms[66]*x120 + parms[68]*x159 - parms[70]*x152 - parms[71]*x143 - parms[72]*x155 - parms[77]*x160 - x120*x153 + x121*x126 + x124*x161 + x127*x129 - x127*x154 + x140*x141 - x140*x158 - x146*x149 - x147*x157;
  double x163 = -x91;
  double x164 = parms[57]*x163 + parms[58]*x86 + parms[59]*x94;
  double x165 = -parms[57];
  double x166 = parms[51]*x89 + parms[53]*x86 + parms[54]*x91 + parms[56]*x125 + parms[58]*x94;
  double x167 = parms[52]*x135 + parms[54]*x133 + parms[55]*x137 + parms[56]*x117 + x114*x165 + x162 - x164*x87 + x166*x89 + x92*x93 + x94*x95;
  double x168 = -x76;
  double x169 = parms[46]*x168 + parms[47]*x68 + parms[49]*x66;
  double x170 = -x79;
  double x171 = parms[42]*x68 + parms[44]*x76 + parms[45]*x60 + parms[46]*x73 + parms[47]*x170;
  double x172 = parms[56]*x93 + parms[57]*x89 + parms[59]*x84;
  double x173 = x109*x83 + x112*x81 + x85*x94;
  double x174 = -x94;
  double x175 = parms[52]*x89 + parms[54]*x86 + parms[55]*x91 + parms[56]*x87 + parms[57]*x174;
  double x176 = parms[77]*x140 + parms[78]*x146 + parms[79]*x125;
  double x177 = -x173;
  double x178 = x151*x98 + x177;
  double x179 = -parms[77];
  double x180 = parms[70]*x128 + parms[71]*x146 + parms[72]*x122 + parms[77]*x98 + x147*x153;
  double x181 = -x146;
  double x182 = parms[66]*x121 + parms[68]*x140 + parms[69]*x84;
  double x183 = parms[61]*x122 + parms[63]*x123 + parms[64]*x121 + parms[66]*x147 + parms[68]*x98;
  double x184 = parms[60]*x136 + parms[61]*x138 + parms[62]*x139 + parms[67]*x119 + parms[68]*x177 + parms[72]*x152 + parms[74]*x143 + parms[75]*x155 + parms[76]*x120 + x123*x141 + x125*x154 + x128*x158 + x129*x84 + x145*x183 - x147*x176 + x147*x182 + x178*x179 + x180*x181;
  double x185 = -x128;
  double x186 = -parms[71]*x152 - parms[73]*x143 - parms[74]*x155 - parms[78]*x178 - x122*x180 - x148*x157 - x149*x185 - x156*x160 - x176*x98;
  double x187 = parms[62]*x136 + parms[64]*x138 + parms[65]*x139 + parms[66]*x173 - parms[67]*x159 + x122*x183 + x125*x161 + x126*x128 + x182*x98 + x186;
  double x188 = parms[50]*x135 + parms[51]*x133 + parms[52]*x137 + parms[57]*x173 + x117*x88 + x125*x95 + x163*x166 + x172*x87 + x175*x86 + x184*x96 + x187*x97;
  double x189 = -parms[41]*x134 - parms[43]*x55 - parms[44]*x131 - parms[46]*x117 - parms[48]*x109 - x167*x81 - x169*x170 - x171*x90 - x188*x82 - x60*x77 - x66*x80;
  double x190 = parms[31]*x42 + parms[33]*x51 + parms[34]*x24 + parms[36]*x72 + parms[38]*x46;
  double x191 = -parms[38];
  double x192 = parms[30]*x42 + parms[31]*x51 + parms[32]*x24 + parms[37]*x71 + x191*x48;
  double x193 = -x51;
  double x194 = parms[46]*x60 + parms[48]*x90 + parms[49]*x73;
  double x195 = parms[66]*x150 + parms[67]*x136 + parms[69]*x119 - parms[76]*x155 - parms[79]*x120 - x122*x176 + x122*x182 + x128*x161 - x152*x153 - x157*x185;
  double x196 = -x89;
  double x197 = parms[67]*x142 + parms[68]*x138 + parms[69]*x159 + parms[77]*x152 + parms[79]*x160 + x123*x129 + x128*x154 + x143*x156 + x145*x182 + x176*x181;
  double x198 = -parms[46]*x55 + parms[47]*x134 + parms[49]*x116 - parms[56]*x137 - parms[59]*x117 - x118*x195 - x135*x88 - x164*x91 + x168*x80 - x172*x196 + x194*x68 - x197*x97;
  double x199 = parms[32]*x33 + parms[34]*x102 + parms[35]*x53 + parms[36]*x45 - parms[37]*x106 + x189 + x190*x42 + x192*x193 + x198*x62 + x46*x49 - x48*x52;
  double x200 = -parms[26];
  double x201 = parms[27]*x21 + parms[29]*x47 + x13*x200;
  double x202 = -x38;
  double x203 = parms[20]*x21 + parms[21]*x13 + parms[22]*x29 + parms[27]*x47;
  double x204 = x198*x56;
  double x205 = parms[36]*x193 + parms[37]*x42 + parms[39]*x71;
  double x206 = parms[41]*x68 + parms[43]*x76 + parms[44]*x60 + parms[46]*x87 + parms[48]*x79;
  double x207 = parms[40]*x134 + parms[41]*x55 + parms[42]*x131 + parms[47]*x116 + x112*x74 + x167*x83 + x169*x73 + x171*x76 + x188*x81 + x194*x87 + x206*x78;
  double x208 = -parms[56]*x133 + parms[57]*x135 + parms[59]*x173 + parms[66]*x139 - parms[68]*x136 + parms[69]*x173 - parms[78]*x143 - parms[79]*x178 + x121*x161 + x129*x140 - x140*x154 - x146*x157 - x155*x179 + x164*x93 + x89*x95;
  double x209 = parms[58]*x133 + parms[59]*x114 + x137*x165 + x163*x95 + x172*x86 + x195*x97 + x197*x96;
  double x210 = parms[46]*x131 + parms[49]*x112 + x134*x74 + x169*x90 + x208*x81 + x209*x82 + x60*x80;
  double x211 = x210*x62;
  double x212 = -x46;
  double x213 = parms[32]*x42 + parms[34]*x51 + parms[35]*x24 + parms[36]*x48 + parms[37]*x212;
  double x214 = parms[47]*x132 + parms[48]*x55 + parms[49]*x109 + x169*x76 + x194*x78 + x208*x83 + x209*x81;
  double x215 = -parms[51]*x135 - parms[53]*x133 - parms[54]*x137 - parms[56]*x177 - parms[58]*x114 - x118*x187 - x164*x84 - x172*x174 - x175*x196 - x184*x97 - x91*x92;
  double x216 = parms[42]*x134 + parms[44]*x55 + parms[45]*x131 + parms[46]*x112 - parms[47]*x109 + x168*x77 + x194*x79 + x206*x68 + x215 - x73*x80;
  double x217 = parms[30]*x33 + parms[31]*x102 + parms[32]*x53 + parms[37]*x110 + x190*x50 + x191*x45 - 0.25*x204 + x205*x48 + x207*x56 + x211*x58 + x213*x51 + x214*x64 + x216*x58 + x49*x72;
  double x218 = -x29;
  double x219 = parms[27]*x218 + parms[28]*x13 + parms[29]*x38;
  double x220 = parms[22]*x21 + parms[24]*x13 + parms[25]*x29 + parms[27]*x202;
  double x221 = parms[36]*x53 + parms[39]*x45 + x191*x33 + x204 + x205*x43 + x214*x67 + x24*x52;
  double x222 = x221*x36;
  double x223 = parms[21]*x31 + parms[23]*x32 + parms[24]*x101 + parms[28]*x105 + x15*x199 + x15*x222 + x200*x40 + x201*x202 + x203*x29 - x21*x220 + x217*x22 + x219*x47;
  double x224 = -parms[27];
  double x225 = -parms[36]*x102 + parms[37]*x33 + parms[39]*x110 + x193*x52 - x210 + x42*x49;
  double x226 = x214*x56;
  double x227 = -parms[28];
  double x228 = parms[26]*x29 + x21*x227;
  double x229 = parms[28]*x32 + parms[29]*x105 + x101*x224 + x13*x201 + x14*(parms[37]*x54 + parms[38]*x102 + parms[39]*x106 + x198*x58 + x205*x51 + x226 + x49*x50) + x218*x228 + x22*x225;
  double x230 = parms[31]*x33 + parms[33]*x102 + parms[34]*x53 + parms[36]*x111 + parms[38]*x106 + x192*x24 + x198*x64 + x205*x212 + x207*x67 + x211*x56 + x213*x43 + x216*x56 + 0.25*x226 + x52*x71;
  double x231 = -x47;
  double x232 = parms[21]*x21 + parms[23]*x13 + parms[24]*x29 + parms[26]*x231 + parms[28]*x38;
  double x233 = -x13;
  double x234 = parms[22]*x31 + parms[24]*x32 + parms[25]*x101 + parms[26]*x104 + x105*x224 + x203*x233 + x21*x232 + x225*x69 + x228*x38 + x230;
  double x235 = parms[20]*x31 + parms[21]*x32 + parms[22]*x101 + parms[27]*x40 + x104*x227 + x13*x220 + x14*x217 + x199*x22 + x218*x232 + x22*x222 + x228*x231;
  double x236 = parms[27]*x31 + parms[29]*x40 + x200*x32 + x21*x228 + x219*x233 + x221;
  double x237 = dq[1]*parms[14] + parms[12]*x3 + parms[15]*x6;
//
  tau_out[0] = -parms[3]*x4 - x0*(ddq[1]*parms[14] - dq[1]*x8 + parms[12]*x11 + parms[15]*x5 - parms[17]*x9 + x223 + x3*x7) - x2*(ddq[1]*parms[11] + dq[1]*x237 + parms[10]*x11 + parms[12]*x5 + parms[17]*x104 + x10*x7 - 0.246*x19*x229 + x19*x234 + x235*x26 + x236*x39);
  tau_out[1] = ddq[1]*parms[13] + parms[11]*x11 + parms[14]*x5 - parms[16]*x104 + parms[18]*x9 + x17*x234 + x19*x235 + 0.246*x19*x236 + x229*x39 - x237*x3 + x6*x8;
  tau_out[2] = x223;
  tau_out[3] = -0.03*x225 + x230;
  tau_out[4] = x189 - 0.03*x198;
  tau_out[5] = x215;
  tau_out[6] = x162;
  tau_out[7] = x186;
//
  return;
}
