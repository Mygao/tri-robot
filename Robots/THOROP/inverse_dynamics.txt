Matrix([[L_1zz + L_2yy], [l_1x], [l_1y - l_2z], [L_2xx - L_2yy + L_3yy + 123*l_3z/250 + 15129*m_3/250000 + 7677*m_4/125000 + 7677*m_5/125000 + 7677*m_6/125000 + 7677*m_7/125000 + 7677*m_8/125000], [L_2xy], [L_2xz], [L_2yz], [L_2zz + L_3yy + 123*l_3z/250 + 15129*m_3/250000 + 7677*m_4/125000 + 7677*m_5/125000 + 7677*m_6/125000 + 7677*m_7/125000 + 7677*m_8/125000], [l_2x], [l_2y - l_3z - 123*m_3/500 - 123*m_4/500 - 123*m_5/500 - 123*m_6/500 - 123*m_7/500 - 123*m_8/500], [L_3xx - L_3yy + L_4yy - 9*m_4/10000], [L_3xy + 3*l_4z/100], [L_3xz], [L_3yz], [L_3zz + L_4yy + 9*m_4/10000 + 9*m_5/5000 + 9*m_6/5000 + 9*m_7/5000 + 9*m_8/5000], [l_3x + 3*m_4/100 + 3*m_5/100 + 3*m_6/100 + 3*m_7/100 + 3*m_8/100], [l_3y - l_4z], [L_4xx - L_4yy + L_5yy + l_5z/2 + 77*m_5/1250 + 77*m_6/1250 + 77*m_7/1250 + 77*m_8/1250], [L_4xy + 3*l_5z/100 + 3*m_5/400 + 3*m_6/400 + 3*m_7/400 + 3*m_8/400], [L_4xz], [L_4yz], [L_4zz + L_5yy + l_5z/2 + 317*m_5/5000 + 317*m_6/5000 + 317*m_7/5000 + 317*m_8/5000], [l_4x - 3*m_5/100 - 3*m_6/100 - 3*m_7/100 - 3*m_8/100], [l_4y + l_5z + m_5/4 + m_6/4 + m_7/4 + m_8/4], [L_5xx - L_5yy + L_6yy], [L_5xy], [L_5xz], [L_5yz], [L_5zz + L_6yy], [l_5x], [l_5y + l_6z], [L_6xx - L_6yy + L_7yy], [L_6xy], [L_6xz], [L_6yz], [L_6zz + L_7yy], [l_6x], [l_6y - l_7z], [L_7xx - L_7yy + L_8yy], [L_7xy], [L_7xz], [L_7yz], [L_7zz + L_8yy], [l_7x], [l_7y + l_8z], [L_8xx - L_8yy], [L_8xy], [L_8xz], [L_8yz], [L_8zz], [l_8x], [l_8y]])
void tau( double* tau_out, const double* parms, const double* q, const double* dq, const double* ddq )
{
  double x0 = sin(q[1]);
  double x1 = -x0;
  double x2 = sin(q[2]);
  double x3 = -x2;
  double x4 = cos(q[1]);
  double x5 = dq[0]*x4;
  double x6 = cos(q[2]);
  double x7 = dq[1]*x6 + x3*x5;
  double x8 = -x7;
  double x9 = dq[0]*x1;
  double x10 = dq[1]*x9;
  double x11 = ddq[0]*x4 + x10;
  double x12 = -x11;
  double x13 = -ddq[1];
  double x14 = dq[2]*x8 + x12*x6 + x13*x2;
  double x15 = -x14;
  double x16 = -x9;
  double x17 = dq[2] + x16;
  double x18 = x17*x7;
  double x19 = -9.81*sin(q[0]);
  double x20 = -x19;
  double x21 = x20*x4;
  double x22 = -x21;
  double x23 = -0.246*((dq[1])*(dq[1])) + x22 - 0.246*((x5)*(x5));
  double x24 = 0.03*x15 + 0.03*x18 + x23;
  double x25 = cos(q[3]);
  double x26 = -9.81*cos(q[0]);
  double x27 = -x26;
  double x28 = -0.246*x10 - 0.246*x11 + x27;
  double x29 = x1*x19;
  double x30 = -0.246*x13 + x29 - 0.246*x5*x9;
  double x31 = x28*x6 + x3*x30;
  double x32 = -((x17)*(x17));
  double x33 = -x6;
  double x34 = dq[1]*x3 + x33*x5;
  double x35 = x32 - ((x34)*(x34));
  double x36 = x31 + 0.03*x35;
  double x37 = sin(q[3]);
  double x38 = -x37;
  double x39 = x24*x25 + x36*x38;
  double x40 = -x34;
  double x41 = dq[3] + x40;
  double x42 = x17*x25 + x37*x8;
  double x43 = x17*x37 + x25*x7;
  double x44 = parms[31]*x43 + parms[33]*x42 + parms[34]*x41;
  double x45 = -ddq[0]*x0 - dq[1]*x5;
  double x46 = ddq[2] - x45;
  double x47 = ddq[1]*x6 + dq[2]*x34 + x12*x2;
  double x48 = dq[3]*x42 + x25*x47 + x37*x46;
  double x49 = x28*x3 + x30*x33;
  double x50 = -x49;
  double x51 = x34*x7;
  double x52 = x46 + x51;
  double x53 = x50 - 0.03*x52;
  double x54 = parms[32]*x43 + parms[34]*x42 + parms[35]*x41;
  double x55 = -x43;
  double x56 = -x47;
  double x57 = dq[3]*x55 + x25*x46 + x37*x56;
  double x58 = ddq[3] + x15;
  double x59 = sin(q[4]);
  double x60 = cos(q[5]);
  double x61 = -x59;
  double x62 = cos(q[4]);
  double x63 = x41*x61 + x43*x62;
  double x64 = dq[4]*x63 + x48*x59 + x58*x62;
  double x65 = ddq[4] + x57;
  double x66 = -x65;
  double x67 = sin(q[5]);
  double x68 = x41*x62 + x43*x59;
  double x69 = -x68;
  double x70 = dq[4] + x42;
  double x71 = -x70;
  double x72 = x60*x71 + x67*x69;
  double x73 = dq[5]*x72 + x60*x64 + x66*x67;
  double x74 = cos(q[6]);
  double x75 = -x58;
  double x76 = dq[4]*x69 + x48*x62 + x59*x75;
  double x77 = ddq[5] + x76;
  double x78 = sin(q[6]);
  double x79 = x60*x68 + x67*x71;
  double x80 = -x79;
  double x81 = dq[5] + x63;
  double x82 = x74*x81 + x78*x80;
  double x83 = dq[6]*x82 + x73*x74 + x77*x78;
  double x84 = -x64;
  double x85 = dq[5]*x80 + x60*x66 + x67*x84;
  double x86 = -x85;
  double x87 = ddq[6] + x86;
  double x88 = x74*x79 + x78*x81;
  double x89 = -x88;
  double x90 = -x72;
  double x91 = dq[6] + x90;
  double x92 = parms[62]*x88 + parms[64]*x82 + parms[65]*x91;
  double x93 = -((x43)*(x43));
  double x94 = -((x41)*(x41));
  double x95 = x93 + x94;
  double x96 = x42*x43;
  double x97 = x58 + x96;
  double x98 = x39 + 0.25*x95 - 0.03*x97;
  double x99 = -x98;
  double x100 = x24*x37 + x25*x36;
  double x101 = x75 + x96;
  double x102 = -((x42)*(x42));
  double x103 = x102 + x94;
  double x104 = x100 + 0.25*x101 - 0.03*x103;
  double x105 = x41*x43;
  double x106 = x105 - x57;
  double x107 = x41*x42;
  double x108 = x107 + x48;
  double x109 = -0.03*x106 + 0.25*x108 + x53;
  double x110 = x104*x59 + x109*x62;
  double x111 = -x67;
  double x112 = x110*x111 + x60*x99;
  double x113 = -x112;
  double x114 = -x113;
  double x115 = parms[60]*x88 + parms[61]*x82 + parms[62]*x91;
  double x116 = x110*x60 + x111*x98;
  double x117 = x104*x62 + x109*x61;
  double x118 = x116*x74 + x117*x78;
  double x119 = -x73;
  double x120 = dq[6]*x89 + x119*x78 + x74*x77;
  double x121 = -x91;
  double x122 = dq[7]*x121 + x83;
  double x123 = ddq[7] + x120;
  double x124 = dq[7]*x88 + x87;
  double x125 = dq[7] + x82;
  double x126 = parms[70]*x91 + parms[71]*x88 + parms[72]*x125;
  double x127 = parms[71]*x91 + parms[73]*x88 + parms[74]*x125;
  double x128 = parms[72]*x124 + parms[74]*x122 + parms[75]*x123 + parms[76]*x118 + parms[77]*x114 + x126*x89 + x127*x91;
  double x129 = parms[61]*x83 + parms[63]*x120 + parms[64]*x87 + parms[66]*x114 + parms[68]*x118 + x115*x91 + x128 + x89*x92;
  double x130 = -x78;
  double x131 = parms[61]*x88 + parms[63]*x82 + parms[64]*x91;
  double x132 = -x116;
  double x133 = x117*x74 + x132*x78;
  double x134 = -x133;
  double x135 = parms[72]*x91 + parms[74]*x88 + parms[75]*x125;
  double x136 = parms[60]*x83 + parms[61]*x120 + parms[62]*x87 + parms[67]*x113 + parms[68]*x134 + parms[71]*x124 + parms[73]*x122 + parms[74]*x123 + parms[76]*x134 + parms[78]*x113 + x121*x131 + x121*x135 + x125*x126 + x82*x92;
  double x137 = parms[52]*x79 + parms[54]*x72 + parms[55]*x81;
  double x138 = parms[51]*x79 + parms[53]*x72 + parms[54]*x81;
  double x139 = parms[50]*x73 + parms[51]*x85 + parms[52]*x77 + parms[57]*x117 + parms[58]*x113 + x129*x130 + x136*x74 + x137*x72 - x138*x81;
  double x140 = -x117;
  double x141 = parms[41]*x68 + parms[43]*x63 + parms[44]*x70;
  double x142 = parms[42]*x68 + parms[44]*x63 + parms[45]*x70;
  double x143 = parms[50]*x79 + parms[51]*x72 + parms[52]*x81;
  double x144 = -x118;
  double x145 = parms[62]*x83 + parms[64]*x120 + parms[65]*x87 + parms[66]*x133 + parms[67]*x144 + parms[70]*x124 + parms[71]*x122 + parms[72]*x123 + parms[77]*x133 + parms[78]*x144 - x115*x82 - x125*x127 + x131*x88 + x135*x88;
  double x146 = parms[51]*x73 + parms[53]*x85 + parms[54]*x77 + parms[56]*x140 + parms[58]*x116 + x137*x80 + x143*x81 - x145;
  double x147 = parms[40]*x64 + parms[41]*x76 + parms[42]*x65 + parms[47]*x98 + parms[48]*x140 + x111*x146 + x139*x60 + x141*x71 + x142*x63;
  double x148 = x63*x70;
  double x149 = x63*x68;
  double x150 = -((x70)*(x70));
  double x151 = -((x68)*(x68));
  double x152 = x125*x88;
  double x153 = x125*x91;
  double x154 = -((x88)*(x88));
  double x155 = -((x91)*(x91));
  double x156 = x154 + x155;
  double x157 = x82*x91;
  double x158 = x82*x88;
  double x159 = parms[66]*(x158 + x87) + parms[67]*x156 + parms[68]*(x157 - x83) + parms[69]*x133 + parms[76]*(-x122 + x153) + parms[77]*(x124 + x152) + parms[78]*x156 + parms[79]*x133;
  double x160 = x72*x81;
  double x161 = x79*x81;
  double x162 = -((x79)*(x79));
  double x163 = -((x72)*(x72));
  double x164 = -((x82)*(x82));
  double x165 = x88*x91;
  double x166 = -((x125)*(x125));
  double x167 = parms[66]*(x155 + x164) + parms[67]*(x158 - x87) + parms[68]*(x120 + x165) + parms[69]*x118 + parms[76]*(x123 + x165) + parms[77]*(x155 + x166) + parms[78]*(-x124 + x152) + parms[79]*x118;
  double x168 = parms[46]*(x149 + x65) + parms[47]*(x150 + x151) + parms[48]*(x148 + x84) + parms[49]*x117 + parms[56]*(x161 + x86) + parms[57]*(x160 + x73) + parms[58]*(x162 + x163) + parms[59]*x117 + x159*x74 + x167*x78;
  double x169 = x168*x59;
  double x170 = parms[40]*x68 + parms[41]*x63 + parms[42]*x70;
  double x171 = parms[52]*x73 + parms[54]*x85 + parms[55]*x77 + parms[56]*x112 + parms[57]*x132 + x129*x74 + x136*x78 + x138*x79 + x143*x90;
  double x172 = parms[41]*x64 + parms[43]*x76 + parms[44]*x65 + parms[46]*x99 + parms[48]*x110 + x142*x69 + x170*x70 + x171;
  double x173 = -((x81)*(x81));
  double x174 = x72*x79;
  double x175 = parms[56]*(x163 + x173) + parms[57]*(x174 - x77) + parms[58]*(x161 + x85) + parms[59]*x116 + x130*x159 + x167*x74;
  double x176 = -((x63)*(x63));
  double x177 = x68*x70;
  double x178 = parms[56]*(x174 + x77) + parms[57]*(x162 + x173) + parms[58]*(x119 + x160) + parms[59]*x112 - parms[66]*(-x120 + x165) - parms[67]*(x157 + x83) - parms[68]*(x154 + x164) - parms[69]*x113 - parms[76]*(x154 + x166) - parms[77]*(-x123 + x165) - parms[78]*(x122 + x153) - parms[79]*x113;
  double x179 = parms[46]*(x150 + x176) + parms[47]*(x149 + x66) + parms[48]*(x177 + x76) + parms[49]*x110 + x111*x178 + x175*x60;
  double x180 = x179*x62;
  double x181 = parms[30]*x48 + parms[31]*x57 + parms[32]*x58 + parms[37]*x53 - parms[38]*x39 + x147*x59 - 0.25*x169 + x172*x62 + 0.25*x180 - x41*x44 + x42*x54;
  double x182 = -x60;
  double x183 = parms[42]*x64 + parms[44]*x76 + parms[45]*x65 + parms[46]*x117 - parms[47]*x110 + x111*x139 + x141*x68 + x146*x182 - x170*x63;
  double x184 = parms[30]*x43 + parms[31]*x42 + parms[32]*x41;
  double x185 = parms[31]*x48 + parms[33]*x57 + parms[34]*x58 - parms[36]*x53 + parms[38]*x100 - 0.03*x169 + 0.03*x180 + x183 + x184*x41 + x54*x55;
  double x186 = parms[36]*x106 + parms[37]*x108 + parms[38]*(x102 + x93) + parms[39]*x53 + x168*x61 + x180;
  double x187 = parms[21]*x7 + parms[23]*x34 + parms[24]*x17;
  double x188 = parms[20]*x7 + parms[21]*x34 + parms[22]*x17;
  double x189 = parms[22]*x47 + parms[24]*x14 + parms[25]*x46 + parms[26]*x49 - parms[27]*x31 + x181*x37 + x185*x25 - 0.03*x186 + x187*x7 + x188*x40;
  double x190 = dq[1]*parms[15] + parms[12]*x5 + parms[14]*x9;
  double x191 = dq[1]*parms[12] + parms[10]*x5 + parms[11]*x9;
  double x192 = x179*x59;
  double x193 = x168*x62;
  double x194 = parms[36]*x103 + parms[37]*x101 + parms[38]*(x105 + x57) + parms[39]*x100 + x192 + x193;
  double x195 = parms[46]*(x177 - x76) + parms[47]*(x148 + x64) + parms[48]*(x151 + x176) + parms[49]*x98 + x111*x175 + x178*x182;
  double x196 = parms[32]*x48 + parms[34]*x57 + parms[35]*x58 + parms[36]*x39 - parms[37]*x100 + x147*x62 + x172*x61 - x184*x42 - 0.25*x192 - 0.25*x193 - 0.03*x195 + x43*x44;
  double x197 = parms[36]*x97 + parms[37]*x95 + parms[38]*(x107 - x48) + parms[39]*x39 + x195;
  double x198 = parms[22]*x7 + parms[24]*x34 + parms[25]*x17;
  double x199 = parms[21]*x47 + parms[23]*x14 + parms[24]*x46 - parms[26]*x23 + parms[28]*x31 + x17*x188 - 0.03*x194*x37 - x196 - 0.03*x197*x25 + x198*x8;
  double x200 = parms[26]*x52 + parms[27]*(x32 - ((x7)*(x7))) + parms[28]*(x17*x34 + x56) + parms[29]*x49 - x186;
  double x201 = parms[26]*x35 + parms[27]*(-x46 + x51) + parms[28]*(x14 + x18) + parms[29]*x31 + x194*x25 + x197*x38;
  double x202 = parms[20]*x47 + parms[21]*x14 + parms[22]*x46 + parms[27]*x23 + parms[28]*x50 - x17*x187 + x181*x25 + x185*x38 + x198*x34;
  double x203 = dq[1]*parms[14] + parms[11]*x5 + parms[13]*x9;
//
  tau_out[0] = ddq[0]*parms[5] + parms[6]*x26 + parms[7]*x20 + x1*(ddq[1]*parms[14] + dq[1]*x191 + parms[11]*x11 + parms[13]*x45 - parms[16]*x27 + parms[18]*x29 - x189 - x190*x5) + x4*(ddq[1]*parms[12] - dq[1]*x203 + parms[10]*x11 + parms[11]*x45 + parms[17]*x27 + parms[18]*x22 + x190*x9 + x199*x33 + 0.246*x2*x200 - 0.246*x201*x6 + x202*x3);
  tau_out[1] = ddq[1]*parms[15] + parms[12]*x11 + parms[14]*x45 + parms[16]*x21 - parms[17]*x29 + x16*x191 + x199*x3 - 0.246*x2*x201 - 0.246*x200*x6 + x202*x6 + x203*x5;
  tau_out[2] = x189;
  tau_out[3] = x196;
  tau_out[4] = x183;
  tau_out[5] = x171;
  tau_out[6] = x145;
  tau_out[7] = x128;
//
  return;
}