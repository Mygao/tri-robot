void tau( double* tau_out, const double* parms, const double* q, const double* dq, const double* ddq )
{
  double x0 = -9.81*cos(q[0]);
  double x1 = -9.81*sin(q[0]);
  double x2 = -x1;
  double x3 = cos(q[1]);
  double x4 = sin(q[1]);
  double x5 = -x4;
  double x6 = dq[0]*x5;
  double x7 = dq[1]*x6;
  double x8 = ddq[0]*x3 + x7;
  double x9 = dq[0]*x3;
  double x10 = -ddq[0]*x4 - dq[1]*x9;
  double x11 = -x0;
  double x12 = dq[1]*parms[15] + parms[12]*x9 + parms[14]*x6;
  double x13 = dq[1]*parms[14] + parms[11]*x9 + parms[13]*x6;
  double x14 = x2*x3;
  double x15 = -x14;
  double x16 = -upperArmLength;
  double x17 = cos(q[2]);
  double x18 = sin(q[2]);
  double x19 = -x18;
  double x20 = -x17;
  double x21 = dq[1]*x19 + x20*x9;
  double x22 = -x6;
  double x23 = dq[2] + x22;
  double x24 = -((x23)*(x23));
  double x25 = -((x21)*(x21)) + x24;
  double x26 = ddq[2] - x10;
  double x27 = dq[1]*x17 + x19*x9;
  double x28 = x21*x27;
  double x29 = -ddq[1];
  double x30 = -x27;
  double x31 = -x8;
  double x32 = dq[2]*x30 + x17*x31 + x18*x29;
  double x33 = x23*x27;
  double x34 = x11 + x16*(x7 + x8);
  double x35 = x1*x5;
  double x36 = x16*(x29 + x6*x9) + x35;
  double x37 = x17*x34 + x19*x36;
  double x38 = cos(q[3]);
  double x39 = sin(q[3]);
  double x40 = x23*x38 + x30*x39;
  double x41 = -((x40)*(x40));
  double x42 = -x21;
  double x43 = dq[3] + x42;
  double x44 = -((x43)*(x43));
  double x45 = x41 + x44;
  double x46 = -x32;
  double x47 = ddq[3] + x46;
  double x48 = -x47;
  double x49 = x23*x39 + x27*x38;
  double x50 = x40*x49;
  double x51 = x48 + x50;
  double x52 = -x49;
  double x53 = ddq[1]*x17 + dq[2]*x21 + x18*x31;
  double x54 = -x53;
  double x55 = dq[3]*x52 + x26*x38 + x39*x54;
  double x56 = x43*x49;
  double x57 = elbowOffsetX*x25 + x37;
  double x58 = upperArmLength*(-((dq[1])*(dq[1])) - ((x9)*(x9))) + x15;
  double x59 = elbowOffsetX*(x33 + x46) + x58;
  double x60 = x38*x57 + x39*x59;
  double x61 = sin(q[4]);
  double x62 = cos(q[4]);
  double x63 = -x61;
  double x64 = x43*x63 + x49*x62;
  double x65 = -((x64)*(x64));
  double x66 = dq[4] + x40;
  double x67 = -((x66)*(x66));
  double x68 = ddq[4] + x55;
  double x69 = -x68;
  double x70 = x43*x62 + x49*x61;
  double x71 = x64*x70;
  double x72 = dq[3]*x40 + x26*x39 + x38*x53;
  double x73 = -x70;
  double x74 = dq[4]*x73 + x48*x61 + x62*x72;
  double x75 = x66*x70;
  double x76 = -elbowOffsetX;
  double x77 = lowerArmLength*x51 + x45*x76 + x60;
  double x78 = x19*x34 + x20*x36;
  double x79 = -x78;
  double x80 = x26 + x28;
  double x81 = x76*x80 + x79;
  double x82 = x40*x43;
  double x83 = x72 + x82;
  double x84 = -x55 + x56;
  double x85 = lowerArmLength*x83 + x76*x84 + x81;
  double x86 = x61*x77 + x62*x85;
  double x87 = cos(q[5]);
  double x88 = sin(q[5]);
  double x89 = -x66;
  double x90 = x73*x88 + x87*x89;
  double x91 = -((x90)*(x90));
  double x92 = dq[5] + x64;
  double x93 = -((x92)*(x92));
  double x94 = ddq[5] + x74;
  double x95 = x70*x87 + x88*x89;
  double x96 = x90*x95;
  double x97 = -x95;
  double x98 = dq[4]*x64 + x47*x62 + x61*x72;
  double x99 = -x98;
  double x100 = dq[5]*x97 + x69*x87 + x88*x99;
  double x101 = x92*x95;
  double x102 = -x39;
  double x103 = x102*x57 + x38*x59;
  double x104 = -((x49)*(x49));
  double x105 = x104 + x44;
  double x106 = x47 + x50;
  double x107 = lowerArmLength*x105 + x103 + x106*x76;
  double x108 = -x88;
  double x109 = x107*x108 + x86*x87;
  double x110 = cos(q[6]);
  double x111 = sin(q[6]);
  double x112 = x110*x95 + x111*x92;
  double x113 = -x90;
  double x114 = dq[6] + x113;
  double x115 = x112*x114;
  double x116 = -x112;
  double x117 = dq[5]*x90 + x69*x88 + x87*x98;
  double x118 = -x117;
  double x119 = dq[6]*x116 + x110*x94 + x111*x118;
  double x120 = ddq[7] + x119;
  double x121 = -((x114)*(x114));
  double x122 = x110*x92 + x111*x97;
  double x123 = dq[7] + x122;
  double x124 = -((x123)*(x123));
  double x125 = -x100;
  double x126 = ddq[6] + x125;
  double x127 = dq[7]*x112 + x126;
  double x128 = x112*x123;
  double x129 = x62*x77 + x63*x85;
  double x130 = x109*x110 + x111*x129;
  double x131 = -((x122)*(x122));
  double x132 = x112*x122;
  double x133 = parms[66]*(x121 + x131) + parms[67]*(-x126 + x132) + parms[68]*(x115 + x119) + parms[69]*x130 + parms[76]*(x115 + x120) + parms[77]*(x121 + x124) + parms[78]*(-x127 + x128) + parms[79]*x130;
  double x134 = x114*x123;
  double x135 = dq[6]*x122 + x110*x117 + x111*x94;
  double x136 = -x114;
  double x137 = dq[7]*x136 + x135;
  double x138 = -((x112)*(x112));
  double x139 = x121 + x138;
  double x140 = -x109;
  double x141 = x110*x129 + x111*x140;
  double x142 = x114*x122;
  double x143 = parms[66]*(x126 + x132) + parms[67]*x139 + parms[68]*(-x135 + x142) + parms[69]*x141 + parms[76]*(x134 - x137) + parms[77]*(x127 + x128) + parms[78]*x139 + parms[79]*x141;
  double x144 = -x111;
  double x145 = parms[56]*(x91 + x93) + parms[57]*(-x94 + x96) + parms[58]*(x100 + x101) + parms[59]*x109 + x110*x133 + x143*x144;
  double x146 = -((x95)*(x95));
  double x147 = x90*x92;
  double x148 = -x107;
  double x149 = x108*x86 + x148*x87;
  double x150 = -x149;
  double x151 = parms[56]*(x94 + x96) + parms[57]*(x146 + x93) + parms[58]*(x118 + x147) + parms[59]*x149 - parms[66]*(x115 - x119) - parms[67]*(x135 + x142) - parms[68]*(x131 + x138) - parms[69]*x150 - parms[76]*(x124 + x138) - parms[77]*(x115 - x120) - parms[78]*(x134 + x137) - parms[79]*x150;
  double x152 = parms[46]*(x65 + x67) + parms[47]*(x69 + x71) + parms[48]*(x74 + x75) + parms[49]*x86 + x108*x151 + x145*x87;
  double x153 = -((x70)*(x70));
  double x154 = x64*x66;
  double x155 = parms[46]*(x68 + x71) + parms[47]*(x153 + x67) + parms[48]*(x154 + x99) + parms[49]*x129 + parms[56]*(x101 + x125) + parms[57]*(x117 + x147) + parms[58]*(x146 + x91) + parms[59]*x129 + x110*x143 + x111*x133;
  double x156 = x152*x61 + x155*x62;
  double x157 = parms[36]*x45 + parms[37]*x51 + parms[38]*(x55 + x56) + parms[39]*x60 + x156;
  double x158 = -x87;
  double x159 = parms[46]*(-x74 + x75) + parms[47]*(x154 + x98) + parms[48]*(x153 + x65) + parms[49]*x107 + x108*x145 + x151*x158;
  double x160 = parms[36]*x106 + parms[37]*x105 + parms[38]*(-x72 + x82) + parms[39]*x103 + x159;
  double x161 = parms[26]*x25 + parms[27]*(-x26 + x28) + parms[28]*(x32 + x33) + parms[29]*x37 + x102*x160 + x157*x38;
  double x162 = x152*x62 + x155*x63;
  double x163 = parms[36]*x84 + parms[37]*x83 + parms[38]*(x104 + x41) + parms[39]*x81 + x162;
  double x164 = parms[26]*x80 + parms[27]*(x24 - ((x27)*(x27))) + parms[28]*(x21*x23 + x54) + parms[29]*x78 - x163;
  double x165 = parms[22]*x27 + parms[24]*x21 + parms[25]*x23;
  double x166 = parms[21]*x27 + parms[23]*x21 + parms[24]*x23;
  double x167 = parms[32]*x49 + parms[34]*x40 + parms[35]*x43;
  double x168 = parms[31]*x49 + parms[33]*x40 + parms[34]*x43;
  double x169 = parms[42]*x70 + parms[44]*x64 + parms[45]*x66;
  double x170 = -x129;
  double x171 = parms[41]*x70 + parms[43]*x64 + parms[44]*x66;
  double x172 = parms[52]*x95 + parms[54]*x90 + parms[55]*x92;
  double x173 = parms[51]*x95 + parms[53]*x90 + parms[54]*x92;
  double x174 = parms[70]*x114 + parms[71]*x112 + parms[72]*x123;
  double x175 = -x141;
  double x176 = parms[72]*x114 + parms[74]*x112 + parms[75]*x123;
  double x177 = parms[62]*x112 + parms[64]*x122 + parms[65]*x114;
  double x178 = parms[61]*x112 + parms[63]*x122 + parms[64]*x114;
  double x179 = parms[60]*x135 + parms[61]*x119 + parms[62]*x126 + parms[67]*x150 + parms[68]*x175 + parms[71]*x127 + parms[73]*x137 + parms[74]*x120 + parms[76]*x175 + parms[78]*x150 + x122*x177 + x123*x174 + x136*x176 + x136*x178;
  double x180 = parms[71]*x114 + parms[73]*x112 + parms[74]*x123;
  double x181 = -x150;
  double x182 = parms[72]*x127 + parms[74]*x137 + parms[75]*x120 + parms[76]*x130 + parms[77]*x181 + x114*x180 + x116*x174;
  double x183 = parms[60]*x112 + parms[61]*x122 + parms[62]*x114;
  double x184 = parms[61]*x135 + parms[63]*x119 + parms[64]*x126 + parms[66]*x181 + parms[68]*x130 + x114*x183 + x116*x177 + x182;
  double x185 = parms[50]*x117 + parms[51]*x100 + parms[52]*x94 + parms[57]*x129 + parms[58]*x150 + x110*x179 + x144*x184 + x172*x90 - x173*x92;
  double x186 = parms[50]*x95 + parms[51]*x90 + parms[52]*x92;
  double x187 = -x130;
  double x188 = parms[62]*x135 + parms[64]*x119 + parms[65]*x126 + parms[66]*x141 + parms[67]*x187 + parms[70]*x127 + parms[71]*x137 + parms[72]*x120 + parms[77]*x141 + parms[78]*x187 + x112*x176 + x112*x178 - x122*x183 - x123*x180;
  double x189 = parms[51]*x117 + parms[53]*x100 + parms[54]*x94 + parms[56]*x170 + parms[58]*x109 + x172*x97 + x186*x92 - x188;
  double x190 = parms[40]*x98 + parms[41]*x74 + parms[42]*x68 + parms[47]*x107 + parms[48]*x170 + x108*x189 + x169*x64 + x171*x89 + x185*x87;
  double x191 = parms[52]*x117 + parms[54]*x100 + parms[55]*x94 + parms[56]*x149 + parms[57]*x140 + x110*x184 + x111*x179 + x113*x186 + x173*x95;
  double x192 = parms[40]*x70 + parms[41]*x64 + parms[42]*x66;
  double x193 = parms[41]*x98 + parms[43]*x74 + parms[44]*x68 + parms[46]*x148 + parms[48]*x86 + x169*x73 + x191 + x192*x66;
  double x194 = lowerArmLength*x162 + parms[30]*x72 + parms[31]*x55 + parms[32]*x47 + parms[37]*x81 - parms[38]*x103 + x167*x40 - x168*x43 + x190*x61 + x193*x62;
  double x195 = parms[42]*x98 + parms[44]*x74 + parms[45]*x68 + parms[46]*x129 - parms[47]*x86 + x108*x185 + x158*x189 + x171*x70 - x192*x64;
  double x196 = parms[30]*x49 + parms[31]*x40 + parms[32]*x43;
  double x197 = elbowOffsetX*x162 + parms[31]*x72 + parms[33]*x55 + parms[34]*x47 - parms[36]*x81 + parms[38]*x60 + x167*x52 + x195 + x196*x43;
  double x198 = parms[20]*x53 + parms[21]*x32 + parms[22]*x26 + parms[27]*x58 + parms[28]*x79 + x102*x197 + x165*x21 - x166*x23 + x194*x38;
  double x199 = parms[20]*x27 + parms[21]*x21 + parms[22]*x23;
  double x200 = -lowerArmLength*x156 + parms[32]*x72 + parms[34]*x55 + parms[35]*x47 + parms[36]*x103 - parms[37]*x60 + x159*x76 + x168*x49 + x190*x62 + x193*x63 - x196*x40;
  double x201 = parms[21]*x53 + parms[23]*x32 + parms[24]*x26 - parms[26]*x58 + parms[28]*x37 + x165*x30 + x199*x23 - x200 + x76*(x157*x39 + x160*x38);
  double x202 = dq[1]*parms[12] + parms[10]*x9 + parms[11]*x6;
  double x203 = parms[22]*x53 + parms[24]*x32 + parms[25]*x26 + parms[26]*x78 - parms[27]*x37 + x163*x76 + x166*x27 + x194*x39 + x197*x38 + x199*x42;
//
  tau_out[0] = ddq[0]*parms[5] + parms[6]*x0 + parms[7]*x2 + x3*(ddq[1]*parms[12] - dq[1]*x13 + parms[10]*x8 + parms[11]*x10 + parms[17]*x11 + parms[18]*x15 + x12*x6 + x16*(x161*x17 + x164*x19) + x19*x198 + x20*x201) + x5*(ddq[1]*parms[14] + dq[1]*x202 + parms[11]*x8 + parms[13]*x10 - parms[16]*x11 + parms[18]*x35 - x12*x9 - x203);
  tau_out[1] = ddq[1]*parms[15] + parms[12]*x8 + parms[14]*x10 + parms[16]*x14 - parms[17]*x35 + upperArmLength*(x161*x19 + x164*x20) + x13*x9 + x17*x198 + x19*x201 + x202*x22;
  tau_out[2] = x203;
  tau_out[3] = x200;
  tau_out[4] = x195;
  tau_out[5] = x191;
  tau_out[6] = x188;
  tau_out[7] = x182;
//
  return;
}