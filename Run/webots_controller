#! /bin/bash
# webots_controller : launches lua scripts in webots
Webots_Home=/usr/local/webots

# For Mac systems!
echo $OSTYPE
if [[ "${OSTYPE}" = darwin* ]]
then
	echo "On a mac!"
  #export OSTYPE = $(shell uname -s|awk '{print tolower($$0)}')
	eval `/usr/libexec/path_helper -s`
	source ~/.bash_profile
	Webots_Home=/Applications/Webots
else
	echo "On Linux!"
fi

# Setup dynamic library path
# ---------------------------------------------------------------------
export LD_LIBRARY_PATH=$Webots_Home/lib:$LD_LIBRARY_PATH

# Change to directory containing this file 
# ---------------------------------------------------------------------
RELATIVE_PATH=`echo $0 | sed 's/\(.*\)\/.*$/\1/'`
cd -P $RELATIVE_PATH

# Run lua script depending on controller arguments
# ---------------------------------------------------------------------
if [ "$1" = "motion_manager" ]
then
  echo Starting motion_manager...
  exec xterm -fn 9x15 -hold -e luajit motion_manager.lua
elif [ "$1" = "keyframe_editor" ]
then
  echo Starting keyframe_editor...
  exec xterm -fn 9x15 -hold -e luajit keyframe_editor.lua
elif [ "$1" = "bias_editor" ]
then
  echo Starting bias_editor...
  exec xterm -fn 9x15 -hold -e luajit bias_editor.lua
elif [ "$1" = "test_webots" ]
then
  echo Starting test_webots
  cd Test
  exec xterm -fn 9x15 -hold -e luajit test_webots.lua
elif [ "$1" = "test_balance" ]
then
  echo Starting test_balance...
  cd Test
  exec luajit test_balance.lua
elif [ "$1" = "test_swing" ]
then
  echo Starting test_swing...
  cd Test
  exec luajit test_swing.lua
elif [ "$1" = "test_pid" ]
then
  echo Starting test_pid...
  cd Test
  exec luajit test_pid.lua
elif [ "$1" = "test_walk" ]
then
  echo Starting test_walk...
  cd Test
  exec xterm -fn 9x15 -hold -e luajit test_walk.lua 
elif [ "$1" = "walk_tuner" ]
then
  echo Starting walk_tuner...
  exec xterm -fn 9x15 -hold -e luajit walk_tuner.lua
else 
  echo Starting demo...
  exec xterm -fn 9x15 -hold -e luajit demo.lua 
fi
