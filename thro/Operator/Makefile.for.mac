#############################################################################
# Makefile for building: OperatorConsole.app/Contents/MacOS/OperatorConsole
# Generated by qmake (2.01a) (Qt 4.8.4) on: Mon Apr 15 13:10:33 2013
# Project:  OperatorConsole.pro
# Template: app
# Command: /usr/local/bin/qmake -o Makefile OperatorConsole.pro
#############################################################################

####### Compiler, tools and options

CC            = clang
CXX           = clang++
DEFINES       = -DQT_NO_DEBUG -DQT_PHONON_LIB -DQT_OPENGL_LIB -DQT_GUI_LIB -DQT_NETWORK_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -O2 -arch x86_64 -Wall -W $(DEFINES)
CXXFLAGS      = -pipe -O2 -arch x86_64 -Wall -W $(DEFINES)
INCPATH       = -I/usr/local/Cellar/qt/4.8.4/mkspecs/unsupported/macx-clang -I. -I/usr/local/Cellar/qt/4.8.4/lib/QtCore.framework/Versions/4/Headers -I/usr/local/Cellar/qt/4.8.4/lib/QtCore.framework/Versions/4/Headers -I/usr/local/Cellar/qt/4.8.4/lib/QtNetwork.framework/Versions/4/Headers -I/usr/local/Cellar/qt/4.8.4/lib/QtNetwork.framework/Versions/4/Headers -I/usr/local/Cellar/qt/4.8.4/lib/QtGui.framework/Versions/4/Headers -I/usr/local/Cellar/qt/4.8.4/lib/QtGui.framework/Versions/4/Headers -I/usr/local/Cellar/qt/4.8.4/lib/QtOpenGL.framework/Versions/4/Headers -I/usr/local/Cellar/qt/4.8.4/lib/QtOpenGL.framework/Versions/4/Headers -I/usr/local/Cellar/qt/4.8.4/lib/phonon.framework/Versions/4/Headers -I/usr/local/Cellar/qt/4.8.4/lib/phonon.framework/Versions/4/Headers -I/usr/local/Cellar/qt/4.8.4/include -I/usr/include/lua5.1 -I/usr/local/Cellar/qt/4.8.4/include/phonon_compat -I/System/Library/Frameworks/OpenGL.framework/Versions/A/Headers -I/System/Library/Frameworks/AGL.framework/Headers -I. -I. -F/usr/local/Cellar/qt/4.8.4/lib -I/opt/X11/include
LINK          = clang++
LFLAGS        = -headerpad_max_install_names -arch x86_64
LIBS          = $(SUBLIBS) -F/usr/local/Cellar/qt/4.8.4/lib -L/usr/local/Cellar/qt/4.8.4/lib -lOpenThreads -losg -losgDB -losgUtil -losgViewer -losgGA -losgQt -framework phonon -L/opt/X11/lib -L/usr/local/Cellar/qt/4.8.4/lib -F/usr/local/Cellar/qt/4.8.4/lib -framework QtGui -framework QtCore -framework QtOpenGL -framework QtNetwork -framework OpenGL -framework AGL -framework qwt -lX11 -F/usr/local/lib
AR            = ar cq
RANLIB        = ranlib -s
QMAKE         = /usr/local/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = cp -f
COPY_DIR      = cp -f -R
STRIP         = 
INSTALL_FILE  = $(COPY_FILE)
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = $(COPY_FILE)
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p
export MACOSX_DEPLOYMENT_TARGET = 10.4

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = main.cpp \
		centerwindow.cpp \
		rightwindow.cpp \
		leftwindow.cpp \
		datamanager.cpp \
		osgwidget.cpp \
		osgcloudwidget.cpp \
		osgmodelwidget.cpp \
		videowidget.cpp \
		operatorcontrolwidget.cpp \
		engineeringcontrolwidget.cpp \
		visualdatabase.cpp \
		videomanager.cpp \
		eventmanager.cpp \
		behaviorstatemachine.cpp \
		ingressstatemachine.cpp \
		egressstatemachine.cpp \
		climbstatemachine.cpp \
		walkstatemachine.cpp \
		osgcamera.cpp \
		commsinterface.cpp \
		osgrenderthread.cpp \
		osgmousemanipulator.cpp \
		manager.cpp \
		keyboardeventfilter.cpp \
		modelmanipulator.cpp \
		videofeed.cpp \
		luaengine.cpp \
		commsmanager.cpp moc_centerwindow.cpp \
		moc_rightwindow.cpp \
		moc_leftwindow.cpp \
		moc_osgwidget.cpp \
		moc_videowidget.cpp \
		moc_operatorcontrolwidget.cpp \
		moc_engineeringcontrolwidget.cpp \
		moc_keyboardeventfilter.cpp \
		moc_luaengine.cpp
OBJECTS       = main.o \
		centerwindow.o \
		rightwindow.o \
		leftwindow.o \
		datamanager.o \
		osgwidget.o \
		osgcloudwidget.o \
		osgmodelwidget.o \
		videowidget.o \
		operatorcontrolwidget.o \
		engineeringcontrolwidget.o \
		visualdatabase.o \
		videomanager.o \
		eventmanager.o \
		behaviorstatemachine.o \
		ingressstatemachine.o \
		egressstatemachine.o \
		climbstatemachine.o \
		walkstatemachine.o \
		osgcamera.o \
		commsinterface.o \
		osgrenderthread.o \
		osgmousemanipulator.o \
		manager.o \
		keyboardeventfilter.o \
		modelmanipulator.o \
		videofeed.o \
		luaengine.o \
		commsmanager.o \
		moc_centerwindow.o \
		moc_rightwindow.o \
		moc_leftwindow.o \
		moc_osgwidget.o \
		moc_videowidget.o \
		moc_operatorcontrolwidget.o \
		moc_engineeringcontrolwidget.o \
		moc_keyboardeventfilter.o \
		moc_luaengine.o
DIST          = /usr/local/Cellar/qt/4.8.4/mkspecs/common/unix.conf \
		/usr/local/Cellar/qt/4.8.4/mkspecs/common/mac.conf \
		/usr/local/Cellar/qt/4.8.4/mkspecs/common/gcc-base.conf \
		/usr/local/Cellar/qt/4.8.4/mkspecs/common/gcc-base-macx.conf \
		/usr/local/Cellar/qt/4.8.4/mkspecs/common/clang.conf \
		/usr/local/Cellar/qt/4.8.4/mkspecs/qconfig.pri \
		/usr/local/Cellar/qt/4.8.4/mkspecs/modules/qt_webkit_version.pri \
		/usr/local/Cellar/qt/4.8.4/mkspecs/features/qt_functions.prf \
		/usr/local/Cellar/qt/4.8.4/mkspecs/features/qt_config.prf \
		/usr/local/Cellar/qt/4.8.4/mkspecs/features/exclusive_builds.prf \
		/usr/local/Cellar/qt/4.8.4/mkspecs/features/default_pre.prf \
		/usr/local/Cellar/qt/4.8.4/mkspecs/features/mac/default_pre.prf \
		/usr/local/Cellar/qt/4.8.4/mkspecs/features/release.prf \
		/usr/local/Cellar/qt/4.8.4/mkspecs/features/default_post.prf \
		/usr/local/Cellar/qt/4.8.4/mkspecs/features/mac/default_post.prf \
		/usr/local/Cellar/qt/4.8.4/mkspecs/features/mac/x86_64.prf \
		/usr/local/Cellar/qt/4.8.4/mkspecs/features/mac/objective_c.prf \
		/usr/local/Cellar/qt/4.8.4/mkspecs/features/warn_on.prf \
		/usr/local/Cellar/qt/4.8.4/mkspecs/features/qt.prf \
		/usr/local/Cellar/qt/4.8.4/mkspecs/features/unix/opengl.prf \
		/usr/local/Cellar/qt/4.8.4/mkspecs/features/unix/thread.prf \
		/usr/local/Cellar/qt/4.8.4/mkspecs/features/moc.prf \
		/usr/local/Cellar/qt/4.8.4/mkspecs/features/mac/rez.prf \
		/usr/local/Cellar/qt/4.8.4/mkspecs/features/mac/sdk.prf \
		/usr/local/Cellar/qt/4.8.4/mkspecs/features/resources.prf \
		/usr/local/Cellar/qt/4.8.4/mkspecs/features/uic.prf \
		/usr/local/Cellar/qt/4.8.4/mkspecs/features/yacc.prf \
		/usr/local/Cellar/qt/4.8.4/mkspecs/features/lex.prf \
		/usr/local/Cellar/qt/4.8.4/mkspecs/features/include_source_dir.prf \
		OperatorConsole.pro
QMAKE_TARGET  = OperatorConsole
DESTDIR       = 
TARGET        = OperatorConsole.app/Contents/MacOS/OperatorConsole

####### Custom Compiler Variables
QMAKE_COMP_QMAKE_OBJECTIVE_CFLAGS = -pipe \
		-O2 \
		-arch \
		x86_64 \
		-Wall \
		-W


first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile OperatorConsole.app/Contents/PkgInfo OperatorConsole.app/Contents/Resources/empty.lproj OperatorConsole.app/Contents/Info.plist $(TARGET)

$(TARGET): ui_centerwindow.h ui_rightwindow.h ui_leftwindow.h ui_operatorcontrolwidget.h ui_engineeringcontrolwidget.h $(OBJECTS)  
	@$(CHK_DIR_EXISTS) OperatorConsole.app/Contents/MacOS/ || $(MKDIR) OperatorConsole.app/Contents/MacOS/ 
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: OperatorConsole.pro  /usr/local/Cellar/qt/4.8.4/mkspecs/unsupported/macx-clang/qmake.conf /usr/local/Cellar/qt/4.8.4/mkspecs/common/unix.conf \
		/usr/local/Cellar/qt/4.8.4/mkspecs/common/mac.conf \
		/usr/local/Cellar/qt/4.8.4/mkspecs/common/gcc-base.conf \
		/usr/local/Cellar/qt/4.8.4/mkspecs/common/gcc-base-macx.conf \
		/usr/local/Cellar/qt/4.8.4/mkspecs/common/clang.conf \
		/usr/local/Cellar/qt/4.8.4/mkspecs/qconfig.pri \
		/usr/local/Cellar/qt/4.8.4/mkspecs/modules/qt_webkit_version.pri \
		/usr/local/Cellar/qt/4.8.4/mkspecs/features/qt_functions.prf \
		/usr/local/Cellar/qt/4.8.4/mkspecs/features/qt_config.prf \
		/usr/local/Cellar/qt/4.8.4/mkspecs/features/exclusive_builds.prf \
		/usr/local/Cellar/qt/4.8.4/mkspecs/features/default_pre.prf \
		/usr/local/Cellar/qt/4.8.4/mkspecs/features/mac/default_pre.prf \
		/usr/local/Cellar/qt/4.8.4/mkspecs/features/release.prf \
		/usr/local/Cellar/qt/4.8.4/mkspecs/features/default_post.prf \
		/usr/local/Cellar/qt/4.8.4/mkspecs/features/mac/default_post.prf \
		/usr/local/Cellar/qt/4.8.4/mkspecs/features/mac/x86_64.prf \
		/usr/local/Cellar/qt/4.8.4/mkspecs/features/mac/objective_c.prf \
		/usr/local/Cellar/qt/4.8.4/mkspecs/features/warn_on.prf \
		/usr/local/Cellar/qt/4.8.4/mkspecs/features/qt.prf \
		/usr/local/Cellar/qt/4.8.4/mkspecs/features/unix/opengl.prf \
		/usr/local/Cellar/qt/4.8.4/mkspecs/features/unix/thread.prf \
		/usr/local/Cellar/qt/4.8.4/mkspecs/features/moc.prf \
		/usr/local/Cellar/qt/4.8.4/mkspecs/features/mac/rez.prf \
		/usr/local/Cellar/qt/4.8.4/mkspecs/features/mac/sdk.prf \
		/usr/local/Cellar/qt/4.8.4/mkspecs/features/resources.prf \
		/usr/local/Cellar/qt/4.8.4/mkspecs/features/uic.prf \
		/usr/local/Cellar/qt/4.8.4/mkspecs/features/yacc.prf \
		/usr/local/Cellar/qt/4.8.4/mkspecs/features/lex.prf \
		/usr/local/Cellar/qt/4.8.4/mkspecs/features/include_source_dir.prf \
		/usr/local/Cellar/qt/4.8.4/lib/phonon.framework/phonon.prl \
		/usr/local/Cellar/qt/4.8.4/lib/QtGui.framework/QtGui.prl \
		/usr/local/Cellar/qt/4.8.4/lib/QtCore.framework/QtCore.prl \
		/usr/local/Cellar/qt/4.8.4/lib/QtOpenGL.framework/QtOpenGL.prl \
		/usr/local/Cellar/qt/4.8.4/lib/QtNetwork.framework/QtNetwork.prl
	$(QMAKE) -o Makefile OperatorConsole.pro
/usr/local/Cellar/qt/4.8.4/mkspecs/common/unix.conf:
/usr/local/Cellar/qt/4.8.4/mkspecs/common/mac.conf:
/usr/local/Cellar/qt/4.8.4/mkspecs/common/gcc-base.conf:
/usr/local/Cellar/qt/4.8.4/mkspecs/common/gcc-base-macx.conf:
/usr/local/Cellar/qt/4.8.4/mkspecs/common/clang.conf:
/usr/local/Cellar/qt/4.8.4/mkspecs/qconfig.pri:
/usr/local/Cellar/qt/4.8.4/mkspecs/modules/qt_webkit_version.pri:
/usr/local/Cellar/qt/4.8.4/mkspecs/features/qt_functions.prf:
/usr/local/Cellar/qt/4.8.4/mkspecs/features/qt_config.prf:
/usr/local/Cellar/qt/4.8.4/mkspecs/features/exclusive_builds.prf:
/usr/local/Cellar/qt/4.8.4/mkspecs/features/default_pre.prf:
/usr/local/Cellar/qt/4.8.4/mkspecs/features/mac/default_pre.prf:
/usr/local/Cellar/qt/4.8.4/mkspecs/features/release.prf:
/usr/local/Cellar/qt/4.8.4/mkspecs/features/default_post.prf:
/usr/local/Cellar/qt/4.8.4/mkspecs/features/mac/default_post.prf:
/usr/local/Cellar/qt/4.8.4/mkspecs/features/mac/x86_64.prf:
/usr/local/Cellar/qt/4.8.4/mkspecs/features/mac/objective_c.prf:
/usr/local/Cellar/qt/4.8.4/mkspecs/features/warn_on.prf:
/usr/local/Cellar/qt/4.8.4/mkspecs/features/qt.prf:
/usr/local/Cellar/qt/4.8.4/mkspecs/features/unix/opengl.prf:
/usr/local/Cellar/qt/4.8.4/mkspecs/features/unix/thread.prf:
/usr/local/Cellar/qt/4.8.4/mkspecs/features/moc.prf:
/usr/local/Cellar/qt/4.8.4/mkspecs/features/mac/rez.prf:
/usr/local/Cellar/qt/4.8.4/mkspecs/features/mac/sdk.prf:
/usr/local/Cellar/qt/4.8.4/mkspecs/features/resources.prf:
/usr/local/Cellar/qt/4.8.4/mkspecs/features/uic.prf:
/usr/local/Cellar/qt/4.8.4/mkspecs/features/yacc.prf:
/usr/local/Cellar/qt/4.8.4/mkspecs/features/lex.prf:
/usr/local/Cellar/qt/4.8.4/mkspecs/features/include_source_dir.prf:
/usr/local/Cellar/qt/4.8.4/lib/phonon.framework/phonon.prl:
/usr/local/Cellar/qt/4.8.4/lib/QtGui.framework/QtGui.prl:
/usr/local/Cellar/qt/4.8.4/lib/QtCore.framework/QtCore.prl:
/usr/local/Cellar/qt/4.8.4/lib/QtOpenGL.framework/QtOpenGL.prl:
/usr/local/Cellar/qt/4.8.4/lib/QtNetwork.framework/QtNetwork.prl:
qmake:  FORCE
	@$(QMAKE) -o Makefile OperatorConsole.pro

OperatorConsole.app/Contents/PkgInfo: 
	@$(CHK_DIR_EXISTS) OperatorConsole.app/Contents || $(MKDIR) OperatorConsole.app/Contents 
	@$(DEL_FILE) OperatorConsole.app/Contents/PkgInfo
	@echo "APPL????" >OperatorConsole.app/Contents/PkgInfo
OperatorConsole.app/Contents/Resources/empty.lproj: 
	@$(CHK_DIR_EXISTS) OperatorConsole.app/Contents/Resources || $(MKDIR) OperatorConsole.app/Contents/Resources 
	@touch OperatorConsole.app/Contents/Resources/empty.lproj
	
OperatorConsole.app/Contents/Info.plist: 
	@$(CHK_DIR_EXISTS) OperatorConsole.app/Contents || $(MKDIR) OperatorConsole.app/Contents 
	@$(DEL_FILE) OperatorConsole.app/Contents/Info.plist
	@sed -e "s,@SHORT_VERSION@,1.0,g" -e "s,@TYPEINFO@,????,g" -e "s,@ICON@,,g" -e "s,@EXECUTABLE@,OperatorConsole,g" -e "s,@TYPEINFO@,????,g" /usr/local/Cellar/qt/4.8.4/mkspecs/unsupported/macx-clang/Info.plist.app >OperatorConsole.app/Contents/Info.plist
dist: 
	@$(CHK_DIR_EXISTS) .tmp/OperatorConsole1.0.0 || $(MKDIR) .tmp/OperatorConsole1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/OperatorConsole1.0.0/ && $(COPY_FILE) --parents centerwindow.h rightwindow.h leftwindow.h datamanager.h osgwidget.h osgcloudwidget.h osgmodelwidget.h videowidget.h operatorcontrolwidget.h engineeringcontrolwidget.h visualdatabase.h videomanager.h eventmanager.h behaviorstatemachine.h ingressstatemachine.h egressstatemachine.h climbstatemachine.h walkstatemachine.h osgcamera.h commsinterface.h osgrenderthread.h osgmousemanipulator.h manager.h keyboardeventfilter.h modelmanipulator.h videofeed.h luaengine.h commsmanager.h .tmp/OperatorConsole1.0.0/ && $(COPY_FILE) --parents main.cpp centerwindow.cpp rightwindow.cpp leftwindow.cpp datamanager.cpp osgwidget.cpp osgcloudwidget.cpp osgmodelwidget.cpp videowidget.cpp operatorcontrolwidget.cpp engineeringcontrolwidget.cpp visualdatabase.cpp videomanager.cpp eventmanager.cpp behaviorstatemachine.cpp ingressstatemachine.cpp egressstatemachine.cpp climbstatemachine.cpp walkstatemachine.cpp osgcamera.cpp commsinterface.cpp osgrenderthread.cpp osgmousemanipulator.cpp manager.cpp keyboardeventfilter.cpp modelmanipulator.cpp videofeed.cpp luaengine.cpp commsmanager.cpp .tmp/OperatorConsole1.0.0/ && $(COPY_FILE) --parents centerwindow.ui rightwindow.ui leftwindow.ui operatorcontrolwidget.ui engineeringcontrolwidget.ui .tmp/OperatorConsole1.0.0/ && (cd `dirname .tmp/OperatorConsole1.0.0` && $(TAR) OperatorConsole1.0.0.tar OperatorConsole1.0.0 && $(COMPRESS) OperatorConsole1.0.0.tar) && $(MOVE) `dirname .tmp/OperatorConsole1.0.0`/OperatorConsole1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/OperatorConsole1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) -r OperatorConsole.app
	-$(DEL_FILE) Makefile


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_objective_c_make_all:
compiler_objective_c_clean:
compiler_moc_header_make_all: moc_centerwindow.cpp moc_rightwindow.cpp moc_leftwindow.cpp moc_osgwidget.cpp moc_videowidget.cpp moc_operatorcontrolwidget.cpp moc_engineeringcontrolwidget.cpp moc_keyboardeventfilter.cpp moc_luaengine.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_centerwindow.cpp moc_rightwindow.cpp moc_leftwindow.cpp moc_osgwidget.cpp moc_videowidget.cpp moc_operatorcontrolwidget.cpp moc_engineeringcontrolwidget.cpp moc_keyboardeventfilter.cpp moc_luaengine.cpp
moc_centerwindow.cpp: centerwindow.h
	/usr/local/Cellar/qt/4.8.4/bin/moc $(DEFINES) $(INCPATH) -D__APPLE__ -D__GNUC__ centerwindow.h -o moc_centerwindow.cpp

moc_rightwindow.cpp: rightwindow.h
	/usr/local/Cellar/qt/4.8.4/bin/moc $(DEFINES) $(INCPATH) -D__APPLE__ -D__GNUC__ rightwindow.h -o moc_rightwindow.cpp

moc_leftwindow.cpp: leftwindow.h
	/usr/local/Cellar/qt/4.8.4/bin/moc $(DEFINES) $(INCPATH) -D__APPLE__ -D__GNUC__ leftwindow.h -o moc_leftwindow.cpp

moc_osgwidget.cpp: osgcamera.h \
		osgrenderthread.h \
		osgwidget.h
	/usr/local/Cellar/qt/4.8.4/bin/moc $(DEFINES) $(INCPATH) -D__APPLE__ -D__GNUC__ osgwidget.h -o moc_osgwidget.cpp

moc_videowidget.cpp: videowidget.h
	/usr/local/Cellar/qt/4.8.4/bin/moc $(DEFINES) $(INCPATH) -D__APPLE__ -D__GNUC__ videowidget.h -o moc_videowidget.cpp

moc_operatorcontrolwidget.cpp: operatorcontrolwidget.h
	/usr/local/Cellar/qt/4.8.4/bin/moc $(DEFINES) $(INCPATH) -D__APPLE__ -D__GNUC__ operatorcontrolwidget.h -o moc_operatorcontrolwidget.cpp

moc_engineeringcontrolwidget.cpp: engineeringcontrolwidget.h
	/usr/local/Cellar/qt/4.8.4/bin/moc $(DEFINES) $(INCPATH) -D__APPLE__ -D__GNUC__ engineeringcontrolwidget.h -o moc_engineeringcontrolwidget.cpp

moc_keyboardeventfilter.cpp: keyboardeventfilter.h
	/usr/local/Cellar/qt/4.8.4/bin/moc $(DEFINES) $(INCPATH) -D__APPLE__ -D__GNUC__ keyboardeventfilter.h -o moc_keyboardeventfilter.cpp

moc_luaengine.cpp: luaengine.h
	/usr/local/Cellar/qt/4.8.4/bin/moc $(DEFINES) $(INCPATH) -D__APPLE__ -D__GNUC__ luaengine.h -o moc_luaengine.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_rez_source_make_all:
compiler_rez_source_clean:
compiler_uic_make_all: ui_centerwindow.h ui_rightwindow.h ui_leftwindow.h ui_operatorcontrolwidget.h ui_engineeringcontrolwidget.h
compiler_uic_clean:
	-$(DEL_FILE) ui_centerwindow.h ui_rightwindow.h ui_leftwindow.h ui_operatorcontrolwidget.h ui_engineeringcontrolwidget.h
ui_centerwindow.h: centerwindow.ui
	/usr/local/Cellar/qt/4.8.4/bin/uic centerwindow.ui -o ui_centerwindow.h

ui_rightwindow.h: rightwindow.ui
	/usr/local/Cellar/qt/4.8.4/bin/uic rightwindow.ui -o ui_rightwindow.h

ui_leftwindow.h: leftwindow.ui
	/usr/local/Cellar/qt/4.8.4/bin/uic leftwindow.ui -o ui_leftwindow.h

ui_operatorcontrolwidget.h: operatorcontrolwidget.ui
	/usr/local/Cellar/qt/4.8.4/bin/uic operatorcontrolwidget.ui -o ui_operatorcontrolwidget.h

ui_engineeringcontrolwidget.h: engineeringcontrolwidget.ui
	/usr/local/Cellar/qt/4.8.4/bin/uic engineeringcontrolwidget.ui -o ui_engineeringcontrolwidget.h

compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean compiler_uic_clean 

####### Compile

main.o: main.cpp centerwindow.h \
		keyboardeventfilter.h \
		rightwindow.h \
		leftwindow.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o main.o main.cpp

centerwindow.o: centerwindow.cpp centerwindow.h \
		ui_centerwindow.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o centerwindow.o centerwindow.cpp

rightwindow.o: rightwindow.cpp rightwindow.h \
		ui_rightwindow.h \
		osgwidget.h \
		osgcamera.h \
		osgrenderthread.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o rightwindow.o rightwindow.cpp

leftwindow.o: leftwindow.cpp leftwindow.h \
		ui_leftwindow.h \
		osgwidget.h \
		osgcamera.h \
		osgrenderthread.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o leftwindow.o leftwindow.cpp

datamanager.o: datamanager.cpp datamanager.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o datamanager.o datamanager.cpp

osgwidget.o: osgwidget.cpp osgwidget.h \
		osgcamera.h \
		osgrenderthread.h \
		osgmousemanipulator.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o osgwidget.o osgwidget.cpp

osgcloudwidget.o: osgcloudwidget.cpp osgcloudwidget.h \
		osgwidget.h \
		osgcamera.h \
		osgrenderthread.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o osgcloudwidget.o osgcloudwidget.cpp

osgmodelwidget.o: osgmodelwidget.cpp osgmodelwidget.h \
		osgwidget.h \
		osgcamera.h \
		osgrenderthread.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o osgmodelwidget.o osgmodelwidget.cpp

videowidget.o: videowidget.cpp videowidget.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o videowidget.o videowidget.cpp

operatorcontrolwidget.o: operatorcontrolwidget.cpp operatorcontrolwidget.h \
		ui_operatorcontrolwidget.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o operatorcontrolwidget.o operatorcontrolwidget.cpp

engineeringcontrolwidget.o: engineeringcontrolwidget.cpp engineeringcontrolwidget.h \
		ui_engineeringcontrolwidget.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o engineeringcontrolwidget.o engineeringcontrolwidget.cpp

visualdatabase.o: visualdatabase.cpp visualdatabase.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o visualdatabase.o visualdatabase.cpp

videomanager.o: videomanager.cpp videomanager.h \
		manager.h \
		videofeed.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o videomanager.o videomanager.cpp

eventmanager.o: eventmanager.cpp eventmanager.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o eventmanager.o eventmanager.cpp

behaviorstatemachine.o: behaviorstatemachine.cpp behaviorstatemachine.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o behaviorstatemachine.o behaviorstatemachine.cpp

ingressstatemachine.o: ingressstatemachine.cpp ingressstatemachine.h \
		behaviorstatemachine.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ingressstatemachine.o ingressstatemachine.cpp

egressstatemachine.o: egressstatemachine.cpp egressstatemachine.h \
		behaviorstatemachine.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o egressstatemachine.o egressstatemachine.cpp

climbstatemachine.o: climbstatemachine.cpp climbstatemachine.h \
		behaviorstatemachine.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o climbstatemachine.o climbstatemachine.cpp

walkstatemachine.o: walkstatemachine.cpp walkstatemachine.h \
		behaviorstatemachine.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o walkstatemachine.o walkstatemachine.cpp

osgcamera.o: osgcamera.cpp osgcamera.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o osgcamera.o osgcamera.cpp

commsinterface.o: commsinterface.cpp commsinterface.h \
		manager.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o commsinterface.o commsinterface.cpp

osgrenderthread.o: osgrenderthread.cpp osgrenderthread.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o osgrenderthread.o osgrenderthread.cpp

osgmousemanipulator.o: osgmousemanipulator.cpp osgmousemanipulator.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o osgmousemanipulator.o osgmousemanipulator.cpp

manager.o: manager.cpp manager.h \
		videomanager.h \
		datamanager.h \
		commsinterface.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o manager.o manager.cpp

keyboardeventfilter.o: keyboardeventfilter.cpp keyboardeventfilter.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o keyboardeventfilter.o keyboardeventfilter.cpp

modelmanipulator.o: modelmanipulator.cpp modelmanipulator.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o modelmanipulator.o modelmanipulator.cpp

videofeed.o: videofeed.cpp videofeed.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o videofeed.o videofeed.cpp

luaengine.o: luaengine.cpp luaengine.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o luaengine.o luaengine.cpp

commsmanager.o: commsmanager.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o commsmanager.o commsmanager.cpp

moc_centerwindow.o: moc_centerwindow.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_centerwindow.o moc_centerwindow.cpp

moc_rightwindow.o: moc_rightwindow.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_rightwindow.o moc_rightwindow.cpp

moc_leftwindow.o: moc_leftwindow.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_leftwindow.o moc_leftwindow.cpp

moc_osgwidget.o: moc_osgwidget.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_osgwidget.o moc_osgwidget.cpp

moc_videowidget.o: moc_videowidget.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_videowidget.o moc_videowidget.cpp

moc_operatorcontrolwidget.o: moc_operatorcontrolwidget.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_operatorcontrolwidget.o moc_operatorcontrolwidget.cpp

moc_engineeringcontrolwidget.o: moc_engineeringcontrolwidget.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_engineeringcontrolwidget.o moc_engineeringcontrolwidget.cpp

moc_keyboardeventfilter.o: moc_keyboardeventfilter.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_keyboardeventfilter.o moc_keyboardeventfilter.cpp

moc_luaengine.o: moc_luaengine.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_luaengine.o moc_luaengine.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

